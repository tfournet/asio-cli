openapi: 3.0.1
info:
    title: ConnectWise Asio APIs
    version: ""
    description: ""
paths:
    /api/v1/schemas/{schemaId}/dataset:
        post:
            summary: Add a record to the dataset for specified Schema
            tags:
                - MappingApplicationService
            parameters:
                - name: schemaId
                  in: path
                  description: the id of schema to add the record to the dataset of
                  required: true
                  schema:
                      type: string
                      format: uuid
            x-cw-openapi:
                api-path: /v1/mapping/schema/{schemaId}/dataset
                api-scopes:
                    - platform.dataMapping.create
                filters:
                    - api-scope: platform.dataMapping.create
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/DatasetRequest"
            responses:
                "201":
                    description: Dataset created successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    id: c8f72634-ba9e-11ee-a506-0242ac120002
                                    monitor_type: Monitor1
                                    serviceBoard: Board A
                                    serviceBoardId: 201
                "400":
                    description: Invalid request
                "500":
                    description: Internal server error
        delete:
            summary: Delete entire dataset for specified schema
            tags:
                - Mapping Dataset
            x-cw-openapi:
                api-path: v1/schemas/schema/{schemaId}/dataset
                api-scopes:
                    - platform.dataMapping.delete
                filters:
                    - api-scope: platform.dataMapping.delete
            parameters:
                - name: schemaId
                  in: path
                  description: the id of schema to delete the dataset of
                  required: true
                  schema:
                      type: string
                      format: uuid
            responses:
                "200":
                    description: Successful delete schema dataset
                "404":
                    description: Schema dataset not found
                "500":
                    description: Internal server error
    /api/v1/schemas/{schemaId}/dataset/{entryId}:
        put:
            summary: Update a dataset record for specified Schema
            tags:
                - MappingApplicationService
            parameters:
                - name: schemaId
                  in: path
                  description: the id of schema to update the record to the dataset of
                  required: true
                  schema:
                      type: string
                      format: uuid
                - name: entryId
                  in: path
                  description: the id of dataset record to be updated
                  required: true
                  schema:
                      type: string
                      format: uuid
            x-cw-openapi:
                api-path: /v1/mapping/schema/{schemaId}/dataset/{entryId}
                api-scopes:
                    - platform.dataMapping.update
                filters:
                    - api-scope: platform.dataMapping.update
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/DatasetRequest"
            responses:
                "200":
                    description: Dataset updated successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    id: c8f72634-ba9e-11ee-a506-0242ac120002
                                    monitor_type: Monitor1
                                    serviceBoard: Board A
                                    serviceBoardId: 201
                "400":
                    description: Invalid request
                "500":
                    description: Internal server error
        delete:
            summary: Delete a record in the dataset for specified Schema
            tags:
                - Mapping Dataset
            x-cw-openapi:
                api-path: v1/schemas/schema/{schemaId}/dataset/{entryId}
                api-scopes:
                    - platform.dataMapping.delete
                filters:
                    - api-scope: platform.dataMapping.delete
            parameters:
                - name: schemaId
                  in: path
                  description: the id of schema to delete the record in
                  required: true
                  schema:
                      type: string
                      format: uuid
                - name: entryId
                  in: path
                  description: the id of the record to delete
                  required: true
                  schema:
                      type: string
                      format: uuid
            responses:
                "200":
                    description: Record deleted successfully
                "404":
                    description: Record not found
                "500":
                    description: Internal server error
    /v1/token:
        post:
            tags:
                - Authorization
            summary: Authorize with credentials
            operationId: Authorize with credentials
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                grant_type:
                                    type: string
                                client_id:
                                    type: string
                                client_secret:
                                    type: string
                                scope:
                                    type: string
                            example:
                                grant_type: client_credentials
                                client_id: "6500023"
                                client_secret: some_client_secret
                                scope: topology
                required: false
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            example:
                                access_token: o7-0jLHntmSEfkr5KGq2whqRfR0
                                scope: topology
                                token_type: Bearer
                                expires_in: 3599
            x-codegen-request-body-name: body
    /v1/rate_limits:
        get:
            tags:
                - Rate Limits
            summary: Get current rate limit
            operationId: Get current rate limit
            security:
                - openapi_oauth: []
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            example:
                                resources:
                                    alerts:
                                        create-alert:
                                            limit: 35
                                            remaining: 34
                                            reset: 1603785300
                                    asset:
                                        partner-asset-endpoints-details:
                                            limit: 35
                                            remaining: 35
                                            reset: 1603785300
                                    service:
                                        rate-limit:
                                            limit: 35
                                            remaining: 33
                                            reset: 1603785300
                                    topology:
                                        partner-topology-clients:
                                            limit: 35
                                            remaining: 35
                                            reset: 1603785300
                                        partner-topology-endpoints:
                                            limit: 35
                                            remaining: 35
                                            reset: 1603785300
                                        partner-topology-sites:
                                            limit: 35
                                            remaining: 35
                                            reset: 1603785300
    /v1/alerts:
        put:
            tags:
                - Alerting
            summary: Update alerts
            operationId: Update alerts
            security:
                - alerts:
                      - alerts
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: object
                                properties:
                                    client_id:
                                        type: string
                                    site_id:
                                        type: string
                                    endpoint_id:
                                        type: string
                                    alert_id:
                                        type: string
                                    condition_id:
                                        type: string
                                    alertDetails:
                                        type: object
                                        properties:
                                            Description:
                                                type: string
                                            EventId:
                                                type: number
                                            EventLevel:
                                                type: number
                                            LogName:
                                                type: number
                                            ObservedDate:
                                                type: string
                                            Source:
                                                type: string
                                            createdTimeStamp:
                                                type: number
                                example:
                                    client_id: c1
                                    site_id: s1
                                    endpoint_id: e1
                                    condition_id: 7b409638-e567-4be2-9633-5ae2835cd1bc
                                    alert_id: 47ec0839-ee56-4498-89ad-da8078212686
                                    alertDetails:
                                        Description:
                                            A corruption was discovered in the file system structure on volume
                                            Disk File System Error Event Via PowerShell.
                                        EventId: 11
                                        EventLevel: 4
                                        LogName: 15
                                        ObservedDate: 2018-04-12T11:30:00Z
                                        Source: Ntfs
                                        createdTimeStamp: 1558369952502
                required: true
            responses:
                "207":
                    description: Multi-Status
                    content:
                        application/json:
                            example:
                                data:
                                    - status_code: 204
                                      resource:
                                          client_id: c1
                                          site_id: s1
                                          endpoint_id: e1
                                          condition_id: 7b409638-e567-4be2-9633-5ae2835cd1bc
                                          alert_id: 47ec0839-ee56-4498-89ad-da8078212686
                "400":
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                            example:
                                error: bad request
                                description: invalid input data
                "401":
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                            example:
                                error: unauthorized request
                                description:
                                    The access token provided is expired, revoked, malformed, or
                                    invalid for other reasons.
                "404":
                    description: Not found
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                            example:
                                error: not found
                                description: topology does not exist
                "429":
                    description: Too many requests
                    content:
                        text/plain; charset=utf-8:
                            example: Too Many Requests
                "500":
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                            example:
                                error: internal server error
                                description: internal error
        post:
            tags:
                - Alerting
            summary: Create alerts
            operationId: Create alerts
            security:
                - alerts:
                      - alerts
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: object
                                properties:
                                    client_id:
                                        type: string
                                    site_id:
                                        type: string
                                    endpoint_id:
                                        type: string
                                    condition_id:
                                        type: string
                                    alertDetails:
                                        type: object
                                        properties:
                                            Description:
                                                type: string
                                            EventId:
                                                type: number
                                            EventLevel:
                                                type: number
                                            LogName:
                                                type: number
                                            ObservedDate:
                                                type: string
                                            Source:
                                                type: string
                                            createdTimeStamp:
                                                type: number
                                example:
                                    client_id: c1
                                    site_id: s1
                                    endpoint_id: e1
                                    condition_id: 7b409638-e567-4be2-9633-5ae2835cd1bc
                                    alertDetails:
                                        Description:
                                            A corruption was discovered in the file system structure on volume
                                            Disk File System Error Event Via PowerShell.
                                        EventId: 11
                                        EventLevel: 4
                                        LogName: 15
                                        ObservedDate: 2018-04-12T11:30:00Z
                                        Source: Ntfs
                                        createdTimeStamp: 1558369952502
                required: true
            responses:
                "207":
                    description: Multi-Status
                    content:
                        application/json:
                            example:
                                data:
                                    - status_code: 201
                                      resource:
                                          client_id: c1
                                          site_id: s1
                                          endpoint_id: e1
                                          condition_id: 7b409638-e567-4be2-9633-5ae2835cd1bc
                                          alert_id: 00000-xxxxx-00000
                "400":
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                            example:
                                error: bad request
                                description: invalid input data
                "401":
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                            example:
                                error: unauthorized request
                                description:
                                    The access token provided is expired, revoked, malformed, or
                                    invalid for other reasons.
                "404":
                    description: Not found
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                            example:
                                error: not found
                                description: topology does not exist
                "429":
                    description: Too many requests
                    content:
                        text/plain; charset=utf-8:
                            example: Too Many Requests
                "500":
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                            example:
                                error: internal server error
                                description: internal error
            x-codegen-request-body-name: body
        delete:
            tags:
                - Alerting
            summary: Delete alerts
            operationId: Delete alerts
            security:
                - alerts:
                      - alerts
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: object
                                properties:
                                    client_id:
                                        type: string
                                    site_id:
                                        type: string
                                    endpoint_id:
                                        type: string
                                    alert_id:
                                        type: string
                                    condition_id:
                                        type: string
                                example:
                                    client_id: c1
                                    site_id: s1
                                    endpoint_id: e1
                                    condition_id: 7b409638-e567-4be2-9633-5ae2835cd1bc
                                    alert_id: 47ec0839-ee56-4498-89ad-da8078212686
                required: true
            responses:
                "207":
                    description: Multi-Status
                    content:
                        application/json:
                            example:
                                data:
                                    - status_code: 204
                                      resource:
                                          client_id: c1
                                          site_id: s1
                                          endpoint_id: e1
                                          alert_id: 47ec0839-ee56-4498-89ad-da8078212686
                                          condition_id: 7b409638-e567-4be2-9633-5ae2835cd1bc
                "400":
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                            example:
                                error: bad request
                                description: invalid input data
                "401":
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                            example:
                                error: unauthorized request
                                description:
                                    The access token provided is expired, revoked, malformed, or
                                    invalid for other reasons.
                "404":
                    description: Not found
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                            example:
                                error: not found
                                description: topology does not exist
                "429":
                    description: Too many requests
                    content:
                        text/plain; charset=utf-8:
                            example: Too Many Requests
                "500":
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                            example:
                                error: internal server error
                                description: internal error
    /v1/endpoint-mapping:
        get:
            tags:
                - Endpoint Mapping
            summary: Get list of partner level endpoint mappings
            operationId: Get list of partner level endpoint mappings
            security:
                - endpoint_mapping:
                      - endpoint_mapping
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            example:
                                - mapped: true
                                  name: test_endpoint
                                  client_id: xWtguxurixSAcxCx
                                  site_id: xWtguxurixSAcxCx
                                  endpoint_id: xWtguxurixSAcxCy
                                  integrator_endpoint_id: xWtguxurixSAcxCv
    /v1/clients/{clientID}/sites/{siteID}/endpoint-mapping/{integratorEndpointID}:
        delete:
            tags:
                - Endpoint Mapping
            summary: Delete target endpoint mapping
            operationId: Delete target endpoint mapping
            security:
                - endpoint_mapping:
                      - endpoint_mapping
            parameters:
                - name: clientID
                  in: path
                  description: client id
                  required: true
                  schema:
                      type: string
                  example: 2lUrtru6uvuVs7
                - name: siteID
                  in: path
                  description: site id
                  required: true
                  schema:
                      type: string
                  example: wOCDc3uZu7upuZ
                - name: integratorEndpointID
                  in: path
                  description: integrator endpoint id
                  required: true
                  schema:
                      type: string
                  example: rOCZc8uWu1upuY
            responses:
                "204":
                    description: Integrator site endpoint mapping successfully deleted
    /v1/clients/{clientID}/sites/{siteID}/endpoint-mapping:
        get:
            tags:
                - Endpoint Mapping
            summary: Get list of site level endpoint mappings
            operationId: Get list of site level endpoint mappings
            security:
                - endpoint_mapping:
                      - endpoint_mapping
            parameters:
                - name: clientID
                  in: path
                  description: client id
                  required: true
                  schema:
                      type: string
                  example: 2lUrtru6uvuVs7
                - name: siteID
                  in: path
                  description: site id
                  required: true
                  schema:
                      type: string
                  example: wOCDc3uZu7upuZ
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            example:
                                - mapped: true
                                  name: test_endpoint
                                  client_id: xWtguxurixSAcxCx
                                  site_id: xWtguxurixSAcxCx
                                  endpoint_id: xWtguxurixSAcxCy
                                  integrator_endpoint_id: xWtguxurixSAcxCv
        post:
            tags:
                - Endpoint Mapping
            summary: Upsert site level endpoint mappings
            operationId: Upsert site level endpoint mappings
            security:
                - endpoint_mapping:
                      - endpoint_mapping
            parameters:
                - name: clientID
                  in: path
                  description: client id
                  required: true
                  schema:
                      type: string
                  example: 2lUrtru6uvuVs7
                - name: siteID
                  in: path
                  description: site id
                  required: true
                  schema:
                      type: string
                  example: wOCDc3uZu7upuZ
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                identifiers:
                                    type: object
                                    properties:
                                        name:
                                            type: string
                                integrator_endpoint_id:
                                    type: string
                                asset_attributes:
                                    type: array
                                    items:
                                        type: object
                                        properties:
                                            name:
                                                type: string
                                            value:
                                                type: string
                            example:
                                - integrator_endpoint_id: xWtguxurixSAcxCv
                                  identifiers:
                                      name: test_endpoint
                                  asset_attributes:
                                      - name: xWtguxurixSAcxCx
                                        value: xWtguxurixSAcxCy
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            example:
                                - mapped: true
                                  name: test_endpoint
                                  client_id: xWtguxurixSAcxCx
                                  site_id: xWtguxurixSAcxCx
                                  endpoint_id: xWtguxurixSAcxCy
                                  integrator_endpoint_id: xWtguxurixSAcxCv
        put:
            tags:
                - Endpoint Mapping
            summary: Replace site level endpoint mappings
            operationId: Replace site level endpoint mappings
            security:
                - endpoint_mapping:
                      - endpoint_mapping
            parameters:
                - name: clientID
                  in: path
                  description: client id
                  required: true
                  schema:
                      type: string
                  example: 2lUrtru6uvuVs7
                - name: siteID
                  in: path
                  description: site id
                  required: true
                  schema:
                      type: string
                  example: wOCDc3uZu7upuZ
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                identifiers:
                                    type: object
                                    properties:
                                        name:
                                            type: string
                                integrator_endpoint_id:
                                    type: string
                                asset_attributes:
                                    type: array
                                    items:
                                        type: object
                                        properties:
                                            name:
                                                type: string
                                            value:
                                                type: string
                            example:
                                - integrator_endpoint_id: xWtguxurixSAcxCv
                                  identifiers:
                                      name: test_endpoint
                                  asset_attributes:
                                      - name: xWtguxurixSAcxCx
                                        value: xWtguxurixSAcxCy
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            example:
                                - mapped: true
                                  name: test_endpoint
                                  client_id: xWtguxurixSAcxCx
                                  site_id: xWtguxurixSAcxCx
                                  endpoint_id: xWtguxurixSAcxCy
                                  integrator_endpoint_id: xWtguxurixSAcxCv
        delete:
            tags:
                - Endpoint Mapping
            summary: Delete site level endpoint mappings
            operationId: Delete site level endpoint mappings
            security:
                - endpoint_mapping:
                      - endpoint_mapping
            parameters:
                - name: clientID
                  in: path
                  description: client id
                  required: true
                  schema:
                      type: string
                  example: 2lUrtru6uvuVs7
                - name: siteID
                  in: path
                  description: site id
                  required: true
                  schema:
                      type: string
                  example: wOCDc3uZu7upuZ
            responses:
                "204":
                    description: Integrator site endpoint mapping successfully deleted
    /v1/site-mappings:
        get:
            tags:
                - Site Mapping
            summary: Get list of site mappings
            operationId: Get list of site mappings
            security:
                - site_mapping:
                      - site_mapping
            parameters:
                - name: clientID
                  in: query
                  description: client id
                  required: true
                  schema:
                      type: string
                  example: 2lUrtru6uvuVs7
                - name: siteID
                  in: query
                  description: site id
                  required: true
                  schema:
                      type: string
                  example: wOCDc3uZu7upuZ
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            example:
                                - clientId: xWtguxurixSAcxCx
                                  siteId: xWtguxurixSAcxCx
                                  externalId: xWtguxurixSAcxCy
                                  productInstanceId: xWtguxurixSAcxCv
    /v1/clients/{clientID}/sites/{siteID}/network-devices:
        post:
            tags:
                - Network devices
            summary: Reviews the information about network devices
            operationId: Reviews the information about network devices
            security:
                - network_and_monitoring:
                      - network_and_monitoring
            parameters:
                - name: clientID
                  in: path
                  description: client id
                  required: true
                  schema:
                      type: string
                  example: 2lUrtru6uvuVs7
                - name: siteID
                  in: path
                  description: site id
                  required: true
                  schema:
                      type: string
                  example: wOCDc3uZu7upuZ
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                title:
                                    type: string
                                $schema:
                                    type: string
                                description:
                                    type: string
                                type:
                                    type: string
                                properties:
                                    type: object
                                    properties:
                                        scopeId:
                                            type: object
                                            properties:
                                                type:
                                                    type: string
                                                description:
                                                    type: string
                                        deviceId:
                                            type: object
                                            properties:
                                                type:
                                                    type: string
                                                description:
                                                    type: string
                                        system:
                                            type: object
                                            properties:
                                                type:
                                                    type: string
                                                properties:
                                                    type: object
                                                    properties:
                                                        hostname:
                                                            type: object
                                                            properties:
                                                                type:
                                                                    type: string
                                                                description:
                                                                    type: string
                                                        bootTime:
                                                            type: object
                                                            properties:
                                                                description:
                                                                    type: string
                                                                type:
                                                                    type: string
                                                                pattern:
                                                                    type: string
                                                        manageStatus:
                                                            type: object
                                                            properties:
                                                                type:
                                                                    type: string
                                                                description:
                                                                    type: string
                                                        operStatus:
                                                            type: object
                                                            properties:
                                                                type:
                                                                    type: string
                                                                enum:
                                                                    type: array
                                                                    items:
                                                                        type: string
                                                                description:
                                                                    type: string
                                                        lastSeenTime:
                                                            type: object
                                                            properties:
                                                                description:
                                                                    type: string
                                                                type:
                                                                    type: string
                                                                pattern:
                                                                    type: string
                                                        description:
                                                            type: object
                                                            properties:
                                                                type:
                                                                    type: string
                                                                description:
                                                                    type: string
                                                        vendor:
                                                            type: object
                                                            properties:
                                                                type:
                                                                    type: string
                                                                description:
                                                                    type: string
                                                        model:
                                                            type: object
                                                            properties:
                                                                type:
                                                                    type: string
                                                                description:
                                                                    type: string
                                                        deviceType:
                                                            type: object
                                                            properties:
                                                                type:
                                                                    type: string
                                                                description:
                                                                    type: string
                                                                enum:
                                                                    type: array
                                                                    items:
                                                                        type: string
                                                        firmwareVersion:
                                                            type: object
                                                            properties:
                                                                type:
                                                                    type: string
                                                                description:
                                                                    type: string
                                                        serialNo:
                                                            type: object
                                                            properties:
                                                                type:
                                                                    type: string
                                                                description:
                                                                    type: string
                                                        softwareVersion:
                                                            type: object
                                                            properties:
                                                                type:
                                                                    type: string
                                                                description:
                                                                    type: string
                                        interfaces:
                                            type: object
                                            properties:
                                                type:
                                                    type: string
                                                properties:
                                                    type: object
                                                    properties:
                                                        interface:
                                                            type: object
                                                            properties:
                                                                type:
                                                                    type: string
                                                                items:
                                                                    type: object
                                                                    properties:
                                                                        type:
                                                                            type: string
                                                                        properties:
                                                                            type: object
                                                                            properties:
                                                                                ethernet:
                                                                                    type: object
                                                                                    properties:
                                                                                        type:
                                                                                            type: string
                                                                                        properties:
                                                                                            type: object
                                                                                            properties:
                                                                                                macAddress:
                                                                                                    type: object
                                                                                                    properties:
                                                                                                        type:
                                                                                                            type: string
                                                                                                        description:
                                                                                                            type: string
                                                                                                negotiatedDuplexMode:
                                                                                                    type: object
                                                                                                    properties:
                                                                                                        type:
                                                                                                            type: string
                                                                                                        enum:
                                                                                                            type: array
                                                                                                            items:
                                                                                                                type: string
                                                                                                        description:
                                                                                                            type: string
                                                                                                negotiatedPortSpeed:
                                                                                                    type: object
                                                                                                    properties:
                                                                                                        type:
                                                                                                            type: string
                                                                                                        description:
                                                                                                            type: string
                                                                                adminStatus:
                                                                                    type: object
                                                                                    properties:
                                                                                        type:
                                                                                            type: string
                                                                                        enum:
                                                                                            type: array
                                                                                            items:
                                                                                                type: string
                                                                                        description:
                                                                                            type: string
                                                                                name:
                                                                                    type: object
                                                                                    properties:
                                                                                        type:
                                                                                            type: string
                                                                                        description:
                                                                                            type: string
                                                                                type:
                                                                                    type: object
                                                                                    properties:
                                                                                        type:
                                                                                            type: string
                                                                                        description:
                                                                                            type: string
                                                                                operStatus:
                                                                                    type: object
                                                                                    properties:
                                                                                        type:
                                                                                            type: string
                                                                                        enum:
                                                                                            type: array
                                                                                            items:
                                                                                                type: string
                                                                                        description:
                                                                                            type: string
                                                                                subinterfaces:
                                                                                    type: object
                                                                                    properties:
                                                                                        type:
                                                                                            type: string
                                                                                        properties:
                                                                                            type: object
                                                                                            properties:
                                                                                                subinterface:
                                                                                                    type: object
                                                                                                    properties:
                                                                                                        type:
                                                                                                            type: string
                                                                                                        items:
                                                                                                            type: object
                                                                                                            properties:
                                                                                                                type:
                                                                                                                    type: string
                                                                                                                properties:
                                                                                                                    type: object
                                                                                                                    properties:
                                                                                                                        ipv4:
                                                                                                                            type: object
                                                                                                                            properties:
                                                                                                                                type:
                                                                                                                                    type: string
                                                                                                                                properties:
                                                                                                                                    type: object
                                                                                                                                    properties:
                                                                                                                                        addresses:
                                                                                                                                            type: object
                                                                                                                                            properties:
                                                                                                                                                type:
                                                                                                                                                    type: string
                                                                                                                                                properties:
                                                                                                                                                    type: object
                                                                                                                                                    properties:
                                                                                                                                                        address:
                                                                                                                                                            type: object
                                                                                                                                                            properties:
                                                                                                                                                                type:
                                                                                                                                                                    type: string
                                                                                                                                                                items:
                                                                                                                                                                    type: object
                                                                                                                                                                    properties:
                                                                                                                                                                        type:
                                                                                                                                                                            type: string
                                                                                                                                                                        properties:
                                                                                                                                                                            type: object
                                                                                                                                                                            properties:
                                                                                                                                                                                ip:
                                                                                                                                                                                    type: object
                                                                                                                                                                                    properties:
                                                                                                                                                                                        type:
                                                                                                                                                                                            type: string
                                                                                                                                                                                        description:
                                                                                                                                                                                            type: string
                                                                                                                                                                                prefixLength:
                                                                                                                                                                                    type: object
                                                                                                                                                                                    properties:
                                                                                                                                                                                        type:
                                                                                                                                                                                            type: string
                                                                                                                                                                                        description:
                                                                                                                                                                                            type: string
                                                                                                                        index:
                                                                                                                            type: object
                                                                                                                            properties:
                                                                                                                                type:
                                                                                                                                    type: string
                                                                                                                                description:
                                                                                                                                    type: string
                                                                                id:
                                                                                    type: object
                                                                                    properties:
                                                                                        type:
                                                                                            type: string
                                                                                        description:
                                                                                            type: string
                                        links:
                                            type: object
                                            properties:
                                                type:
                                                    type: string
                                                properties:
                                                    type: object
                                                    properties:
                                                        dashboard:
                                                            type: object
                                                            properties:
                                                                type:
                                                                    type: string
                                                                format:
                                                                    type: string
                                                                description:
                                                                    type: string
                                                                examples:
                                                                    type: array
                                                                    items:
                                                                        type: string
                            example:
                                title: auvik.device.inventory
                                $schema: http://json-schema.org/draft-07/schema#
                                description: Device inventory properties
                                type: object
                                properties:
                                    scopeId:
                                        type: string
                                        description: Unique identifier for the scope containing the network device.
                                    deviceId:
                                        type: string
                                        description: Unique identifier for this network device.
                                    system:
                                        type: object
                                        properties:
                                            hostname:
                                                type: string
                                                description: >-
                                                    The hostname of the device -- should be a single
                                                    domain

                                                    label, without the domain.
                                            bootTime:
                                                description: >-
                                                    This timestamp indicates the time that the system was
                                                    last

                                                    restarted, in ISO 8601 format.
                                                type: string
                                                pattern: (\d{4})-(0[1-9]|1[0-2]|[1-9])-(([12]\d|0[1-9]|3[01])|[1-9])[tT\s]([01]\d|2[0-3]):(([0-5]\d)|\d):(([0-5]\d)|\d)([\.,]\d+)?([zZ]|([\+-])([01]\d|2[0-3]|\d):(([0-5]\d)|\d))$
                                            manageStatus:
                                                type: boolean
                                                description: True if the system should be managed by Auvik, false otherwise.
                                            operStatus:
                                                type: string
                                                enum:
                                                    - UP
                                                    - DOWN
                                                    - UNREACHABLE
                                                    - TESTING
                                                    - UNKNOWN
                                                    - DORMANT
                                                    - NOT_PRESENT
                                                    - LOWER_LAYER_DOWN
                                                description: The current operational state of the entity.
                                            lastSeenTime:
                                                description:
                                                    This timestamp indicates the absolute time that the system was most
                                                    recently observed to be in an UP state, in ISO 8601
                                                    format.
                                                type: string
                                                pattern: (\d{4})-(0[1-9]|1[0-2]|[1-9])-(([12]\d|0[1-9]|3[01])|[1-9])[tT\s]([01]\d|2[0-3]):(([0-5]\d)|\d):(([0-5]\d)|\d)([\.,]\d+)?([zZ]|([\+-])([01]\d|2[0-3]|\d):(([0-5]\d)|\d))$
                                            description:
                                                type: string
                                                description: A description of the system.
                                            vendor:
                                                type: string
                                                description: The manufacturer of the device
                                            model:
                                                type: string
                                                description: The model name of the device
                                            deviceType:
                                                type: string
                                                description: The kind of device
                                                enum:
                                                    - GENERIC
                                                    - SWITCH
                                                    - LAYER_3_SWITCH
                                                    - ROUTER
                                                    - ACCESS_POINT
                                                    - FIREWALL
                                                    - WORKSTATION
                                                    - SERVER
                                                    - NETWORK_STORAGE
                                                    - PRINTER
                                                    - COPIER
                                                    - HYPERVISOR
                                                    - MULTIMEDIA
                                                    - MOBILE_PHONE
                                                    - TABLET
                                                    - HANDHELD
                                                    - COLLECTOR
                                                    - BRIDGE
                                                    - CONTROLLER
                                                    - HUB
                                                    - MODEM
                                                    - UPS
                                                    - UNMANAGED_SWITCH
                                                    - MODULE
                                                    - LOAD_BALANCER
                                                    - CAMERA
                                                    - TELECOMMUNICATIONS
                                                    - PACKET_PROCESSOR
                                                    - CHASSIS
                                                    - AIR_CONDITIONER
                                                    - VIRTUAL_MACHINE
                                                    - POWER_DISTRIBUTION_UNIT
                                                    - IP_PHONE
                                                    - BACKHAUL
                                                    - INTERNET_OF_THINGS
                                                    - VOIP_SWITCH
                                                    - STACK
                                                    - BACKUP_DEVICE
                                                    - TIME_CLOCK
                                                    - LIGHTING_DEVICE
                                                    - AUDIO/VISUAL
                                                    - SECURITY_APPLIANCE
                                                    - UTM
                                                    - ALARM_SYSTEM
                                                    - BUILDING_MANAGEMENT_SYSTEM
                                                    - INTELLIGENT_PLATFORM_MANAGEMENT_INTERFACE
                                                    - THIN_ACCESS_POINT
                                                    - THIN_CLIENT
                                            firmwareVersion:
                                                type: string
                                                description: The version of firmware or BIOS running on the system.
                                            serialNo:
                                                type: string
                                                description: Serial number of the system.
                                            softwareVersion:
                                                type: string
                                                description: The version of the operating system or other system software.
                                    interfaces:
                                        type: object
                                        properties:
                                            interface:
                                                type: array
                                                items:
                                                    type: object
                                                    properties:
                                                        ethernet:
                                                            type: object
                                                            properties:
                                                                macAddress:
                                                                    type: string
                                                                    description:
                                                                        >-
                                                                        Assigns a MAC address to the Ethernet
                                                                        interface.  If not

                                                                        specified, the corresponding operational
                                                                        state leaf is

                                                                        expected to show the system-assigned MAC
                                                                        address.
                                                                negotiatedDuplexMode:
                                                                    type: string
                                                                    enum:
                                                                        - FULL
                                                                        - HALF
                                                                    description:
                                                                        >-
                                                                        When auto-negotiate is set to TRUE, and the
                                                                        interface has

                                                                        completed auto-negotiation with the remote
                                                                        peer, this value

                                                                        shows the duplex mode that has been
                                                                        negotiated.
                                                                negotiatedPortSpeed:
                                                                    type: string
                                                                    description:
                                                                        >-
                                                                        When auto-negotiate is set to TRUE, and the
                                                                        interface has

                                                                        completed auto-negotiation with the remote
                                                                        peer, this value

                                                                        shows the interface speed that has been
                                                                        negotiated.
                                                        adminStatus:
                                                            type: string
                                                            enum:
                                                                - UP
                                                                - DOWN
                                                                - TESTING
                                                            description: >-
                                                                The desired state of the interface.  In RFC 7223
                                                                this leaf

                                                                has the same read semantics as
                                                                ifAdminStatus.  Here, it

                                                                reflects the administrative state as set by
                                                                enabling or

                                                                disabling the interface.
                                                        name:
                                                            type: string
                                                            description: >-
                                                                The name of the interface.


                                                                A device MAY restrict the allowed values for
                                                                this leaf,

                                                                possibly depending on the type of the interface.

                                                                For system-controlled interfaces, this leaf is
                                                                the

                                                                device-specific name of the interface.  The
                                                                'config false'

                                                                list interfaces/interface[name]/state contains
                                                                the currently

                                                                existing interfaces on the device.


                                                                If a client tries to create configuration for a

                                                                system-controlled interface that is not present
                                                                in the

                                                                corresponding state list, the server MAY reject

                                                                the request if the implementation does not
                                                                support

                                                                pre-provisioning of interfaces or if the name
                                                                refers to

                                                                an interface that can never exist in the
                                                                system.  A

                                                                NETCONF server MUST reply with an rpc-error with
                                                                the

                                                                error-tag 'invalid-value' in this case.


                                                                The IETF model in RFC 7223 provides YANG
                                                                features for the

                                                                following (i.e., pre-provisioning and
                                                                arbitrary-names),

                                                                however they are omitted here:

                                                                 If the device supports pre-provisioning of interface
                                                                 configuration, the 'pre-provisioning' feature is
                                                                 advertised.

                                                                 If the device allows arbitrarily named user-controlled
                                                                 interfaces, the 'arbitrary-names' feature is advertised.

                                                                When a configured user-controlled interface is
                                                                created by

                                                                the system, it is instantiated with the same
                                                                name in the

                                                                /interfaces/interface[name]/state list.
                                                        type:
                                                            type: string
                                                            description: >-
                                                                The type of the interface.


                                                                When an interface entry is created, a server MAY

                                                                initialize the type leaf with a valid value,
                                                                e.g., if it

                                                                is possible to derive the type from the name of
                                                                the

                                                                interface.


                                                                If a client tries to set the type of an
                                                                interface to a

                                                                value that can never be used by the system,
                                                                e.g., if the

                                                                type is not supported or if the type does not
                                                                match the

                                                                name of the interface, the server MUST reject
                                                                the request.

                                                                A NETCONF server MUST reply with an rpc-error
                                                                with the

                                                                error-tag 'invalid-value' in this case.
                                                        operStatus:
                                                            type: string
                                                            enum:
                                                                - UP
                                                                - DOWN
                                                                - UNREACHABLE
                                                                - TESTING
                                                                - UNKNOWN
                                                                - DORMANT
                                                                - NOT_PRESENT
                                                                - LOWER_LAYER_DOWN
                                                            description: The current operational state of the entity.
                                                        subinterfaces:
                                                            type: object
                                                            properties:
                                                                subinterface:
                                                                    type: array
                                                                    items:
                                                                        type: object
                                                                        properties:
                                                                            ipv4:
                                                                                type: object
                                                                                properties:
                                                                                    addresses:
                                                                                        type: object
                                                                                        properties:
                                                                                            address:
                                                                                                type: array
                                                                                                items:
                                                                                                    type: object
                                                                                                    properties:
                                                                                                        ip:
                                                                                                            type: string
                                                                                                            description: References the configured IP address
                                                                                                        prefixLength:
                                                                                                            type: integer
                                                                                                            description: The length of the subnet prefix.
                                                                            index:
                                                                                type: integer
                                                                                description:
                                                                                    >-
                                                                                    The index number of the subinterface
                                                                                    -- used to address

                                                                                    the logical interface
                                                        id:
                                                            type: string
                                                            description: Identifier that uniquely identifies the interface on this device
                                    links:
                                        type: object
                                        properties:
                                            dashboard:
                                                type: string
                                                format: uri
                                                description: Device dashboard URI for this device
                                                examples:
                                                    - https://sampledomain.my.auvik.com/#entity/device/199502791112896003/dashboard
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            example:
                                endpoint_id: 23aca978-d186-45a0-8023-e116b7a2f9e1
                "400":
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                            example:
                                error: bad request
                                description: invalid input data
                "401":
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                            example:
                                error: unauthorized request
                                description:
                                    The access token provided is expired, revoked, malformed, or
                                    invalid for other reasons.
                "404":
                    description: Not found
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                            example:
                                error: not found
                                description: topology does not exist
                "429":
                    description: Too many requests
                    content:
                        text/plain; charset=utf-8:
                            example: Too Many Requests
                "500":
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                            example:
                                error: internal server error
                                description: internal error
    /v1/clients/{clientID}/sites/{siteID}/endpoints/{endpointID}/network-devices:
        put:
            tags:
                - Network devices
            summary: Updates the information about network devices
            operationId: Updates the information about network devices
            security:
                - network_and_monitoring:
                      - network_and_monitoring
            parameters:
                - name: clientID
                  in: path
                  description: client id
                  required: true
                  schema:
                      type: string
                  example: 2lUrtru6uvuVs7
                - name: siteID
                  in: path
                  description: site id
                  required: true
                  schema:
                      type: string
                  example: wOCDc3uZu7upuZ
                - name: endpointID
                  in: path
                  description: endpoint id
                  required: true
                  schema:
                      type: string
                  example: cbf234b0-f1c0-4abe-a945-35260d8c6bbc
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                title:
                                    type: string
                                $schema:
                                    type: string
                                description:
                                    type: string
                                type:
                                    type: string
                                properties:
                                    type: object
                                    properties:
                                        scopeId:
                                            type: object
                                            properties:
                                                type:
                                                    type: string
                                                description:
                                                    type: string
                                        deviceId:
                                            type: object
                                            properties:
                                                type:
                                                    type: string
                                                description:
                                                    type: string
                                        system:
                                            type: object
                                            properties:
                                                type:
                                                    type: string
                                                properties:
                                                    type: object
                                                    properties:
                                                        hostname:
                                                            type: object
                                                            properties:
                                                                type:
                                                                    type: string
                                                                description:
                                                                    type: string
                                                        bootTime:
                                                            type: object
                                                            properties:
                                                                description:
                                                                    type: string
                                                                type:
                                                                    type: string
                                                                pattern:
                                                                    type: string
                                                        manageStatus:
                                                            type: object
                                                            properties:
                                                                type:
                                                                    type: string
                                                                description:
                                                                    type: string
                                                        operStatus:
                                                            type: object
                                                            properties:
                                                                type:
                                                                    type: string
                                                                enum:
                                                                    type: array
                                                                    items:
                                                                        type: string
                                                                description:
                                                                    type: string
                                                        lastSeenTime:
                                                            type: object
                                                            properties:
                                                                description:
                                                                    type: string
                                                                type:
                                                                    type: string
                                                                pattern:
                                                                    type: string
                                                        description:
                                                            type: object
                                                            properties:
                                                                type:
                                                                    type: string
                                                                description:
                                                                    type: string
                                                        vendor:
                                                            type: object
                                                            properties:
                                                                type:
                                                                    type: string
                                                                description:
                                                                    type: string
                                                        model:
                                                            type: object
                                                            properties:
                                                                type:
                                                                    type: string
                                                                description:
                                                                    type: string
                                                        deviceType:
                                                            type: object
                                                            properties:
                                                                type:
                                                                    type: string
                                                                description:
                                                                    type: string
                                                                enum:
                                                                    type: array
                                                                    items:
                                                                        type: string
                                                        firmwareVersion:
                                                            type: object
                                                            properties:
                                                                type:
                                                                    type: string
                                                                description:
                                                                    type: string
                                                        serialNo:
                                                            type: object
                                                            properties:
                                                                type:
                                                                    type: string
                                                                description:
                                                                    type: string
                                                        softwareVersion:
                                                            type: object
                                                            properties:
                                                                type:
                                                                    type: string
                                                                description:
                                                                    type: string
                                        interfaces:
                                            type: object
                                            properties:
                                                type:
                                                    type: string
                                                properties:
                                                    type: object
                                                    properties:
                                                        interface:
                                                            type: object
                                                            properties:
                                                                type:
                                                                    type: string
                                                                items:
                                                                    type: object
                                                                    properties:
                                                                        type:
                                                                            type: string
                                                                        properties:
                                                                            type: object
                                                                            properties:
                                                                                ethernet:
                                                                                    type: object
                                                                                    properties:
                                                                                        type:
                                                                                            type: string
                                                                                        properties:
                                                                                            type: object
                                                                                            properties:
                                                                                                macAddress:
                                                                                                    type: object
                                                                                                    properties:
                                                                                                        type:
                                                                                                            type: string
                                                                                                        description:
                                                                                                            type: string
                                                                                                negotiatedDuplexMode:
                                                                                                    type: object
                                                                                                    properties:
                                                                                                        type:
                                                                                                            type: string
                                                                                                        enum:
                                                                                                            type: array
                                                                                                            items:
                                                                                                                type: string
                                                                                                        description:
                                                                                                            type: string
                                                                                                negotiatedPortSpeed:
                                                                                                    type: object
                                                                                                    properties:
                                                                                                        type:
                                                                                                            type: string
                                                                                                        description:
                                                                                                            type: string
                                                                                adminStatus:
                                                                                    type: object
                                                                                    properties:
                                                                                        type:
                                                                                            type: string
                                                                                        enum:
                                                                                            type: array
                                                                                            items:
                                                                                                type: string
                                                                                        description:
                                                                                            type: string
                                                                                name:
                                                                                    type: object
                                                                                    properties:
                                                                                        type:
                                                                                            type: string
                                                                                        description:
                                                                                            type: string
                                                                                type:
                                                                                    type: object
                                                                                    properties:
                                                                                        type:
                                                                                            type: string
                                                                                        description:
                                                                                            type: string
                                                                                operStatus:
                                                                                    type: object
                                                                                    properties:
                                                                                        type:
                                                                                            type: string
                                                                                        enum:
                                                                                            type: array
                                                                                            items:
                                                                                                type: string
                                                                                        description:
                                                                                            type: string
                                                                                subinterfaces:
                                                                                    type: object
                                                                                    properties:
                                                                                        type:
                                                                                            type: string
                                                                                        properties:
                                                                                            type: object
                                                                                            properties:
                                                                                                subinterface:
                                                                                                    type: object
                                                                                                    properties:
                                                                                                        type:
                                                                                                            type: string
                                                                                                        items:
                                                                                                            type: object
                                                                                                            properties:
                                                                                                                type:
                                                                                                                    type: string
                                                                                                                properties:
                                                                                                                    type: object
                                                                                                                    properties:
                                                                                                                        ipv4:
                                                                                                                            type: object
                                                                                                                            properties:
                                                                                                                                type:
                                                                                                                                    type: string
                                                                                                                                properties:
                                                                                                                                    type: object
                                                                                                                                    properties:
                                                                                                                                        addresses:
                                                                                                                                            type: object
                                                                                                                                            properties:
                                                                                                                                                type:
                                                                                                                                                    type: string
                                                                                                                                                properties:
                                                                                                                                                    type: object
                                                                                                                                                    properties:
                                                                                                                                                        address:
                                                                                                                                                            type: object
                                                                                                                                                            properties:
                                                                                                                                                                type:
                                                                                                                                                                    type: string
                                                                                                                                                                items:
                                                                                                                                                                    type: object
                                                                                                                                                                    properties:
                                                                                                                                                                        type:
                                                                                                                                                                            type: string
                                                                                                                                                                        properties:
                                                                                                                                                                            type: object
                                                                                                                                                                            properties:
                                                                                                                                                                                ip:
                                                                                                                                                                                    type: object
                                                                                                                                                                                    properties:
                                                                                                                                                                                        type:
                                                                                                                                                                                            type: string
                                                                                                                                                                                        description:
                                                                                                                                                                                            type: string
                                                                                                                                                                                prefixLength:
                                                                                                                                                                                    type: object
                                                                                                                                                                                    properties:
                                                                                                                                                                                        type:
                                                                                                                                                                                            type: string
                                                                                                                                                                                        description:
                                                                                                                                                                                            type: string
                                                                                                                        index:
                                                                                                                            type: object
                                                                                                                            properties:
                                                                                                                                type:
                                                                                                                                    type: string
                                                                                                                                description:
                                                                                                                                    type: string
                                                                                id:
                                                                                    type: object
                                                                                    properties:
                                                                                        type:
                                                                                            type: string
                                                                                        description:
                                                                                            type: string
                                        links:
                                            type: object
                                            properties:
                                                type:
                                                    type: string
                                                properties:
                                                    type: object
                                                    properties:
                                                        dashboard:
                                                            type: object
                                                            properties:
                                                                type:
                                                                    type: string
                                                                format:
                                                                    type: string
                                                                description:
                                                                    type: string
                                                                examples:
                                                                    type: array
                                                                    items:
                                                                        type: string
                            example:
                                title: auvik.device.inventory
                                $schema: http://json-schema.org/draft-07/schema#
                                description: Device inventory properties
                                type: object
                                properties:
                                    scopeId:
                                        type: string
                                        description: Unique identifier for the scope containing the network device.
                                    deviceId:
                                        type: string
                                        description: Unique identifier for this network device.
                                    system:
                                        type: object
                                        properties:
                                            hostname:
                                                type: string
                                                description: >-
                                                    The hostname of the device -- should be a single
                                                    domain

                                                    label, without the domain.
                                            bootTime:
                                                description: >-
                                                    This timestamp indicates the time that the system was
                                                    last

                                                    restarted, in ISO 8601 format.
                                                type: string
                                                pattern: (\d{4})-(0[1-9]|1[0-2]|[1-9])-(([12]\d|0[1-9]|3[01])|[1-9])[tT\s]([01]\d|2[0-3]):(([0-5]\d)|\d):(([0-5]\d)|\d)([\.,]\d+)?([zZ]|([\+-])([01]\d|2[0-3]|\d):(([0-5]\d)|\d))$
                                            manageStatus:
                                                type: boolean
                                                description: True if the system should be managed by Auvik, false otherwise.
                                            operStatus:
                                                type: string
                                                enum:
                                                    - UP
                                                    - DOWN
                                                    - UNREACHABLE
                                                    - TESTING
                                                    - UNKNOWN
                                                    - DORMANT
                                                    - NOT_PRESENT
                                                    - LOWER_LAYER_DOWN
                                                description: The current operational state of the entity.
                                            lastSeenTime:
                                                description:
                                                    This timestamp indicates the absolute time that the system was most
                                                    recently observed to be in an UP state, in ISO 8601
                                                    format.
                                                type: string
                                                pattern: (\d{4})-(0[1-9]|1[0-2]|[1-9])-(([12]\d|0[1-9]|3[01])|[1-9])[tT\s]([01]\d|2[0-3]):(([0-5]\d)|\d):(([0-5]\d)|\d)([\.,]\d+)?([zZ]|([\+-])([01]\d|2[0-3]|\d):(([0-5]\d)|\d))$
                                            description:
                                                type: string
                                                description: A description of the system.
                                            vendor:
                                                type: string
                                                description: The manufacturer of the device
                                            model:
                                                type: string
                                                description: The model name of the device
                                            deviceType:
                                                type: string
                                                description: The kind of device
                                                enum:
                                                    - GENERIC
                                                    - SWITCH
                                                    - LAYER_3_SWITCH
                                                    - ROUTER
                                                    - ACCESS_POINT
                                                    - FIREWALL
                                                    - WORKSTATION
                                                    - SERVER
                                                    - NETWORK_STORAGE
                                                    - PRINTER
                                                    - COPIER
                                                    - HYPERVISOR
                                                    - MULTIMEDIA
                                                    - MOBILE_PHONE
                                                    - TABLET
                                                    - HANDHELD
                                                    - COLLECTOR
                                                    - BRIDGE
                                                    - CONTROLLER
                                                    - HUB
                                                    - MODEM
                                                    - UPS
                                                    - UNMANAGED_SWITCH
                                                    - MODULE
                                                    - LOAD_BALANCER
                                                    - CAMERA
                                                    - TELECOMMUNICATIONS
                                                    - PACKET_PROCESSOR
                                                    - CHASSIS
                                                    - AIR_CONDITIONER
                                                    - VIRTUAL_MACHINE
                                                    - POWER_DISTRIBUTION_UNIT
                                                    - IP_PHONE
                                                    - BACKHAUL
                                                    - INTERNET_OF_THINGS
                                                    - VOIP_SWITCH
                                                    - STACK
                                                    - BACKUP_DEVICE
                                                    - TIME_CLOCK
                                                    - LIGHTING_DEVICE
                                                    - AUDIO/VISUAL
                                                    - SECURITY_APPLIANCE
                                                    - UTM
                                                    - ALARM_SYSTEM
                                                    - BUILDING_MANAGEMENT_SYSTEM
                                                    - INTELLIGENT_PLATFORM_MANAGEMENT_INTERFACE
                                                    - THIN_ACCESS_POINT
                                                    - THIN_CLIENT
                                            firmwareVersion:
                                                type: string
                                                description: The version of firmware or BIOS running on the system.
                                            serialNo:
                                                type: string
                                                description: Serial number of the system.
                                            softwareVersion:
                                                type: string
                                                description: The version of the operating system or other system software.
                                    interfaces:
                                        type: object
                                        properties:
                                            interface:
                                                type: array
                                                items:
                                                    type: object
                                                    properties:
                                                        ethernet:
                                                            type: object
                                                            properties:
                                                                macAddress:
                                                                    type: string
                                                                    description:
                                                                        >-
                                                                        Assigns a MAC address to the Ethernet
                                                                        interface.  If not

                                                                        specified, the corresponding operational
                                                                        state leaf is

                                                                        expected to show the system-assigned MAC
                                                                        address.
                                                                negotiatedDuplexMode:
                                                                    type: string
                                                                    enum:
                                                                        - FULL
                                                                        - HALF
                                                                    description:
                                                                        >-
                                                                        When auto-negotiate is set to TRUE, and the
                                                                        interface has

                                                                        completed auto-negotiation with the remote
                                                                        peer, this value

                                                                        shows the duplex mode that has been
                                                                        negotiated.
                                                                negotiatedPortSpeed:
                                                                    type: string
                                                                    description:
                                                                        >-
                                                                        When auto-negotiate is set to TRUE, and the
                                                                        interface has

                                                                        completed auto-negotiation with the remote
                                                                        peer, this value

                                                                        shows the interface speed that has been
                                                                        negotiated.
                                                        adminStatus:
                                                            type: string
                                                            enum:
                                                                - UP
                                                                - DOWN
                                                                - TESTING
                                                            description: >-
                                                                The desired state of the interface.  In RFC 7223
                                                                this leaf

                                                                has the same read semantics as
                                                                ifAdminStatus.  Here, it

                                                                reflects the administrative state as set by
                                                                enabling or

                                                                disabling the interface.
                                                        name:
                                                            type: string
                                                            description: >-
                                                                The name of the interface.


                                                                A device MAY restrict the allowed values for
                                                                this leaf,

                                                                possibly depending on the type of the interface.

                                                                For system-controlled interfaces, this leaf is
                                                                the

                                                                device-specific name of the interface.  The
                                                                'config false'

                                                                list interfaces/interface[name]/state contains
                                                                the currently

                                                                existing interfaces on the device.


                                                                If a client tries to create configuration for a

                                                                system-controlled interface that is not present
                                                                in the

                                                                corresponding state list, the server MAY reject

                                                                the request if the implementation does not
                                                                support

                                                                pre-provisioning of interfaces or if the name
                                                                refers to

                                                                an interface that can never exist in the
                                                                system.  A

                                                                NETCONF server MUST reply with an rpc-error with
                                                                the

                                                                error-tag 'invalid-value' in this case.


                                                                The IETF model in RFC 7223 provides YANG
                                                                features for the

                                                                following (i.e., pre-provisioning and
                                                                arbitrary-names),

                                                                however they are omitted here:

                                                                 If the device supports pre-provisioning of interface
                                                                 configuration, the 'pre-provisioning' feature is
                                                                 advertised.

                                                                 If the device allows arbitrarily named user-controlled
                                                                 interfaces, the 'arbitrary-names' feature is advertised.

                                                                When a configured user-controlled interface is
                                                                created by

                                                                the system, it is instantiated with the same
                                                                name in the

                                                                /interfaces/interface[name]/state list.
                                                        type:
                                                            type: string
                                                            description: >-
                                                                The type of the interface.


                                                                When an interface entry is created, a server MAY

                                                                initialize the type leaf with a valid value,
                                                                e.g., if it

                                                                is possible to derive the type from the name of
                                                                the

                                                                interface.


                                                                If a client tries to set the type of an
                                                                interface to a

                                                                value that can never be used by the system,
                                                                e.g., if the

                                                                type is not supported or if the type does not
                                                                match the

                                                                name of the interface, the server MUST reject
                                                                the request.

                                                                A NETCONF server MUST reply with an rpc-error
                                                                with the

                                                                error-tag 'invalid-value' in this case.
                                                        operStatus:
                                                            type: string
                                                            enum:
                                                                - UP
                                                                - DOWN
                                                                - UNREACHABLE
                                                                - TESTING
                                                                - UNKNOWN
                                                                - DORMANT
                                                                - NOT_PRESENT
                                                                - LOWER_LAYER_DOWN
                                                            description: The current operational state of the entity.
                                                        subinterfaces:
                                                            type: object
                                                            properties:
                                                                subinterface:
                                                                    type: array
                                                                    items:
                                                                        type: object
                                                                        properties:
                                                                            ipv4:
                                                                                type: object
                                                                                properties:
                                                                                    addresses:
                                                                                        type: object
                                                                                        properties:
                                                                                            address:
                                                                                                type: array
                                                                                                items:
                                                                                                    type: object
                                                                                                    properties:
                                                                                                        ip:
                                                                                                            type: string
                                                                                                            description: References the configured IP address
                                                                                                        prefixLength:
                                                                                                            type: integer
                                                                                                            description: The length of the subnet prefix.
                                                                            index:
                                                                                type: integer
                                                                                description:
                                                                                    >-
                                                                                    The index number of the subinterface
                                                                                    -- used to address

                                                                                    the logical interface
                                                        id:
                                                            type: string
                                                            description: Identifier that uniquely identifies the interface on this device
                                    links:
                                        type: object
                                        properties:
                                            dashboard:
                                                type: string
                                                format: uri
                                                description: Device dashboard URI for this device
                                                examples:
                                                    - https://sampledomain.my.auvik.com/#entity/device/199502791112896003/dashboard
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            example:
                                status: Success
                "400":
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                            example:
                                error: bad request
                                description: invalid input data
                "401":
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                            example:
                                error: unauthorized request
                                description:
                                    The access token provided is expired, revoked, malformed, or
                                    invalid for other reasons.
                "404":
                    description: Not found
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                            example:
                                error: not found
                                description: topology does not exist
                "429":
                    description: Too many requests
                    content:
                        text/plain; charset=utf-8:
                            example: Too Many Requests
                "500":
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                            example:
                                error: internal server error
                                description: internal error
        delete:
            tags:
                - Network devices
            summary: Deletes the information about network devices
            operationId: Deletes the information about network devices
            security:
                - network_and_monitoring:
                      - network_and_monitoring
            parameters:
                - name: clientID
                  in: path
                  description: client id
                  required: true
                  schema:
                      type: string
                  example: 2lUrtru6uvuVs7
                - name: siteID
                  in: path
                  description: site id
                  required: true
                  schema:
                      type: string
                  example: wOCDc3uZu7upuZ
                - name: endpointID
                  in: path
                  description: endpoint id
                  required: true
                  schema:
                      type: string
                  example: cbf234b0-f1c0-4abe-a945-35260d8c6bbc
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                deviceId:
                                    type: string
                            example:
                                deviceId: "93173126797548047"
            responses:
                "204":
                    description: No contest
                "400":
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                            example:
                                error: bad request
                                description: invalid input data
                "401":
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                            example:
                                error: unauthorized request
                                description:
                                    The access token provided is expired, revoked, malformed, or
                                    invalid for other reasons.
                "404":
                    description: Not found
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                            example:
                                error: not found
                                description: topology does not exist
                "429":
                    description: Too many requests
                    content:
                        text/plain; charset=utf-8:
                            example: Too Many Requests
                "500":
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                            example:
                                error: internal server error
                                description: internal error
    /api/platform/v1/company/companies:
        get:
            tags:
                - Company
            summary: Get list for companies
            operationId: Get list for companies
            security:
                - platform:
                      - platform.companies.read
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Companies"
    /api/platform/v1/company/companies/{companyId}:
        get:
            tags:
                - Company
            summary: Get a company by id
            operationId: Get a company by id
            security:
                - platform:
                      - platform.companies.read
            parameters:
                - name: companyId
                  in: path
                  description: company id
                  required: true
                  schema:
                      type: string
                      format: uuid
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Company"
    /api/platform/v1/company/companies/{companyId}/sites:
        get:
            tags:
                - Company
            summary: Get all sites for the company
            operationId: Get all sites for the company
            security:
                - platform:
                      - platform.sites.read
            parameters:
                - name: companyId
                  in: path
                  description: company id
                  required: true
                  schema:
                      type: string
                      format: uuid
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Sites"
        post:
            tags:
                - Company
            summary: Create a site for the company
            operationId: Create a site for the company
            security:
                - platform:
                      - platform.sites.write
            parameters:
                - name: companyId
                  in: path
                  description: company id
                  required: true
                  schema:
                      type: string
                      format: uuid
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/SiteCreateRequest"
            responses:
                "201":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Site"
    /api/platform/v1/company/companies/{companyId}/sites/{siteId}:
        get:
            tags:
                - Company
            summary: Get site by id for company
            operationId: Get site by id for company
            security:
                - platform:
                      - platform.sites.read
            parameters:
                - name: companyId
                  in: path
                  description: company id
                  required: true
                  schema:
                      type: string
                      format: uuid
                - name: siteId
                  in: path
                  description: site id
                  required: true
                  schema:
                      type: string
                      format: uuid
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Site"
        put:
            tags:
                - Company
            summary: Update site by id for company
            security:
                - platform:
                      - platform.sites.write
            parameters:
                - name: companyId
                  in: path
                  description: company id
                  required: true
                  schema:
                      type: string
                      format: uuid
                - name: siteId
                  in: path
                  description: site id
                  required: true
                  schema:
                      type: string
                      format: uuid
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Site"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Site"
        patch:
            tags:
                - Company
            summary: Update site by id for company
            security:
                - platform:
                      - platform.sites.write
            parameters:
                - name: companyId
                  in: path
                  description: company id
                  required: true
                  schema:
                      type: string
                      format: uuid
                - name: siteId
                  in: path
                  description: site id
                  required: true
                  schema:
                      type: string
                      format: uuid
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/PatchOperations"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Site"
    /api/platform/v1/company/sites:
        get:
            tags:
                - Company
            summary: Get list for sites
            operationId: Get list for sites
            security:
                - platform:
                      - platform.sites.read
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Sites"
    /api/platform/v1/company/sites/{siteId}:
        get:
            tags:
                - Company
            summary: Get site by id
            operationId: Get site by id
            security:
                - platform:
                      - platform.sites.read
            parameters:
                - name: siteId
                  in: path
                  description: site id
                  required: true
                  schema:
                      type: string
                      format: uuid
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Site"
    /api/backup-dashboard/companies/{companyID}/sites/{siteID}/instances:
        post:
            tags:
                - Backup Dashboard
            summary: Stores a record corresponding to a backup run on a device
            operationId: postBackupRecord
            security:
                - backupdashboard:
                      - backupdashboard:create
            parameters:
                - $ref: "#/components/parameters/companyID"
                - $ref: "#/components/parameters/siteID"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/backupInstanceRecord"
            responses:
                "201":
                    description: Created
                    content:
                        application/json: {}
    /api/backup-dashboard/companies/{companyID}/sites/{siteID}/dr-readiness:
        post:
            tags:
                - Backup Dashboard
            summary: |-
                Stores a record corresponding to a dr readiness verification run on a
                device
            operationId: postDRReadinessRecord
            security:
                - backupdashboard:
                      - backupdashboard:create
            parameters:
                - $ref: "#/components/parameters/companyID"
                - $ref: "#/components/parameters/siteID"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/drReadinessRecord"
            responses:
                "201":
                    description: Created
                    content:
                        application/json: {}
    /api/backup-dashboard/companies/{companyID}/sites/{siteID}/alarms:
        post:
            tags:
                - Backup Dashboard
            summary: Stores a record corresponding to an alarm raised by the vendor
            operationId: postAlarmRecord
            security:
                - backupdashboard:
                      - backupdashboard:create
            parameters:
                - $ref: "#/components/parameters/companyID"
                - $ref: "#/components/parameters/siteID"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/alarmRecord"
            responses:
                "201":
                    description: Created
                    content:
                        application/json: {}
    /api/backup-dashboard/companies/{companyID}/sites/{siteID}/alarms/{alarmID}:
        patch:
            tags:
                - Backup Dashboard
            summary: Resolves a previously created alarm record
            operationId: resolveAlarmRecord
            security:
                - backupdashboard:
                      - backupdashboard:create
            parameters:
                - $ref: "#/components/parameters/companyID"
                - $ref: "#/components/parameters/siteID"
                - name: alarmID
                  description:
                      It is the alarm id from the vendor. It corresponds to
                      `vendorAlarmID` field in create alarms request.
                  in: path
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                vendorDeviceID:
                                    type: string
                                    description:
                                        Identifier of the device on the vendor side. This field can be sent
                                        empty for Site level alarms, but it is mandatory for device
                                        & backup job level alarms.
            responses:
                "204":
                    description: No Content
                    content:
                        application/json: {}
    /api/platform/v1/device/endpoints:
        get:
            tags:
                - Devices
            summary: Get details of Devices for a partner
            operationId: Get details of Devices for a partner
            security:
                - endpoints_list:
                      - platform.asset.read
            responses:
                "200":
                    description: Retrieved details of Devices successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/endpointList"
                "404":
                    description: Resource not found
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
    /api/platform/v1/device/clients/{clientID}/endpoints:
        get:
            tags:
                - Devices
            summary: Get details of Devices for a specific company
            operationId: Get details of Devices for a specific company
            security:
                - endpoints_list:
                      - platform.asset.read
            parameters:
                - name: clientID
                  in: path
                  description: client ID
                  required: true
                  schema:
                      type: string
                  example: 436f6d6d-616e-6420-4944-6a200a0a2c75
            responses:
                "200":
                    description: Retrieved details of Devices successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/endpointList"
                "404":
                    description: Resource not found
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
    /api/platform/v1/device/clients/{clientID}/sites/{siteID}/endpoints:
        get:
            tags:
                - Devices
            summary: Get details of Devices for a specific site
            operationId: Get details of Devices for a specific site
            security:
                - endpoints_list:
                      - platform.asset.read
            parameters:
                - name: clientID
                  in: path
                  description: client ID
                  required: true
                  schema:
                      type: string
                  example: 436f6d6d-616e-6420-4944-6a200a0a2c75
                - name: siteID
                  in: path
                  description: site id
                  required: true
                  schema:
                      type: string
                  example: 436f6d6d-616e-6420-4944-6a200a0a2c75
            responses:
                "200":
                    description: Retrieved details of Devices successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/endpointList"
                "404":
                    description: Resource not found
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
    /api/platform/v1/device/endpoints/{endpointID}:
        get:
            tags:
                - Devices
            summary: Get details of a specific Device
            operationId: Get details of a specific Device
            security:
                - endpoints_list:
                      - platform.asset.read
            parameters:
                - name: endpointID
                  in: path
                  description: endpoint id
                  required: true
                  schema:
                      type: string
                  example: 4a9caa07-d45a-4c14-aa36-8c1c26e7a029
            responses:
                "200":
                    description: Retrieved details of a Device successfully
                    content:
                        application/json:
                            example:
                                createTimeUTC: 2023-12-26T17:12:11.994Z
                                agentInstalledUTC: 2023-09-05T13:41:39.331Z
                                endpointID: b1bab436-f68c-42d7-b504-d4184327d701
                                clientID: 436f6d6d-616e-6420-4944-5a207a0a2c76
                                siteID: 436f6d6d-616e-6420-4944-5a207a0a2c76
                                friendlyName: string
                                resourceType: string
                                endpointType: string
                                rolesFeatures: string
                                baseBoard:
                                    product: string
                                    manufacturer: string
                                    model: string
                                    serialNumber: string
                                    name: string
                                    version: string
                                    installDate: 2019-01-16T14:01:12.883Z
                                bios:
                                    product: string
                                    manufacturer: string
                                    version: string
                                    serialNumber: string
                                    smbiosVersion: string
                                drives:
                                    - product: string
                                      manufacturer: string
                                      mediaType: string
                                      interfaceType: string
                                      logicalName: string
                                      serialNumber: string
                                      partitions:
                                          - string
                                      sizeBytes: 0
                                      numberOfPartitions: 0
                                      partitionData:
                                          - name: string
                                            label: string
                                            fileSystem: string
                                            description: string
                                            sizeBytes: 0
                                physicalMemory:
                                    - manufacturer: string
                                      serialNumber: string
                                      sizeBytes: 0
                                networks:
                                    - vendor: string
                                      product: string
                                      dhcpLeaseDuration: 0
                                      dhcpEnabled: true
                                      dhcpServer: string
                                      dhcpLeaseObtained: 2019-01-16T14:01:12.884Z
                                      dhcpLeaseExpires: 2019-01-16T14:01:12.884Z
                                      dnsServers:
                                          - string
                                      ipEnabled: true
                                      ipv4: string
                                      ipv4List:
                                          - string
                                      ipv6: string
                                      ipv6List:
                                          - string
                                      subnetMask: string
                                      subnetMasks:
                                          - string
                                      defaultIPGateway: string
                                      defaultIPGateways:
                                          - string
                                      macAddress: string
                                      winsPrimaryServer: string
                                      winsSecondaryServer: string
                                      logicalName: string
                                os:
                                    product: string
                                    manufacturer: string
                                    osLanguage: string
                                    serialNumber: string
                                    version: string
                                    installDate: 2019-01-16T14:01:12.884Z
                                    type: string
                                    arch: string
                                    servicePack: string
                                    productId: string
                                    productKey: string
                                processors:
                                    - product: string
                                      numberOfCores: 0
                                      clockSpeedMhz: string
                                      family: 0
                                      manufacturer: string
                                      processorType: string
                                      serialNumber: string
                                      level: 0
                                raidController:
                                    softwareRaid: string
                                    hardwareRaid: string
                                    vendor: string
                                system:
                                    product: string
                                    model: string
                                    timeZone: string
                                    timeZoneDescription: string
                                    serialNumber: string
                                    systemName: string
                                    domain: string
                                    domainRole: 0
                                    category: string
                                installedSoftwares:
                                    - name: string
                                      version: string
                                      publisher: string
                                      installDate: 2019-01-16T14:01:12.884Z
                                      userName: string
                                      lastAccessDateTime: 2019-01-16T14:01:12.884Z
                                keyboards:
                                    - deviceID: string
                                      name: string
                                      description: string
                                mouse:
                                    - manufacturer: string
                                      name: string
                                      deviceId: string
                                      deviceInterface: 0
                                      pointingType: 0
                                      buttons: 0
                                monitors:
                                    - deviceID: string
                                      name: string
                                      manufacturer: string
                                      screenHeight: 0
                                      screenWidth: 0
                                physicalDrive:
                                    - type: string
                                      partitions:
                                          - name: string
                                            label: string
                                            fileSystem: string
                                            description: string
                                            sizeBytes: 0
                                users:
                                    - username: string
                                      userType: string
                                      userDisabled: true
                                      userLockout: true
                                      passwordRequired: true
                                services:
                                    - serviceName: string
                                      displayName: string
                                      executablePath: string
                                      startupType: string
                                      serviceStatus: string
                                      logOnAs: string
                                      stopEnableAction: true
                                      delayedAutoStart: true
                                      win32ExitCode: 0
                                      serviceSpecificExitCode: 0
                                shares:
                                    - name: string
                                      caption: string
                                      description: string
                                      path: string
                                      access: string
                                      userAccess:
                                          - string
                                      type:
                                          - string
                                softwareLicenses:
                                    - productName: string
                                      productId: string
                                      productKey: string
                "404":
                    description: Resource not found
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
    /api/platform/v1/device/services:
        get:
            tags:
                - Devices
            summary: Get details of Services for a partner
            operationId: Get details of Services for a partner
            security:
                - endpoints_list:
                      - platform.asset.read
            responses:
                "200":
                    description: Retrieved details of partner level services
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ServiceList"
                "404":
                    description: Resource not found
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
    /api/platform/v1/service/ticketing/categories:
        get:
            tags:
                - Tickets
            summary: Returns all ticket categories for a partner
            description: >
                This API returns all the ticket categories for a partner. Pagination
                support is not available for this API yet, so this API may return large
                amount of data depending upon categories present for a partner in the
                system.
            responses:
                "200":
                    description:
                        Successful response with all available ticket categories for a
                        partner
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Categories"
                "500":
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
    /api/platform/v1/service/ticketing/priorities:
        get:
            tags:
                - Tickets
            summary: Returns all ticket priorities
            description: >
                This API returns all the available priorities in the system. Pagination
                support is not available for this API yet, so this API may return large
                amount of data depending upon priorities present in the system.
            responses:
                "200":
                    description: Successful response with all available statuses
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Priorities"
                "500":
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
    /api/platform/v1/service/ticketing/service-boards:
        get:
            tags:
                - Tickets
            summary: Returns all service-boards for provided partner, available in the service
            description: >
                This API returns all the available service-boards in the system, for
                partner with provided partnerId. Pagination support is not available for
                this API yet, so this API may return large amount of data depending upon
                serviceBoards present in the system.


                The API accepts query parameters which should be provided to identify
                available service boards to assigns tickets to. 

                As the CW Expert Service only support entitled companies and sites,
                providing companyId and siteId allows service to return only entitled
                service-boards.
            parameters:
                - name: companyId
                  in: query
                  description:
                      the id of the company of the ticket for which service boards are to
                      be fetched.
                  schema:
                      type: string
                      format: uuid
                - name: siteId
                  in: query
                  description:
                      the id of the site of the ticket for which service boards are to be
                      fetched.
                  schema:
                      type: string
                      format: uuid
                - name: typeId
                  in: query
                  description:
                      the id of the ticket type which identifies which all service boards
                      are available for ticket of that type to be assgined. If the type is
                      not partner Level, then company and site id should also be provided.
                  schema:
                      type: string
                      format: uuid
            responses:
                "200":
                    description: Successful response with all available service-boards
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ServiceBoards"
                "500":
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
    /api/platform/v1/service/ticketing/service-boards/{id}/teams:
        get:
            tags:
                - Tickets
            summary: Returns all team associations for a service-board
            description: |
                This API fetches all the team associations for a specific service-board.
            parameters:
                - name: id
                  in: path
                  description:
                      the id of the service-board for which the team associations API is
                      being called
                  required: true
                  schema:
                      type: string
                      format: uuid
            responses:
                "200":
                    description:
                        Successful response with all available team associations for a
                        specific service-board
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ServiceBoardTeams"
                "500":
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
    /api/platform/v1/service/ticketing/sources:
        get:
            tags:
                - Tickets
            summary: Returns all ticket sources for a partner
            description: >
                This API returns all the ticket sources for a partner. Pagination
                support is not available for this API yet, so this API may return large
                amount of data depending upon sources present for a partner in the
                system.
            responses:
                "200":
                    description: Successful response with all available ticket sources for a partner
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Sources"
                "500":
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
    /api/platform/v1/service/ticketing/statuses:
        get:
            tags:
                - Tickets
            summary: Returns all ticket statuses
            description: >
                This API returns all the available statuses in the system. Pagination
                support is not available for this API yet, so this API may return large
                amount of data depending upon statuses present in the system.
            responses:
                "200":
                    description: Successful response with all available statuses
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Statuses"
                "500":
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
    /api/platform/v1/service/ticketing/tags:
        get:
            tags:
                - Tickets
            summary: Returns all tags for provided partner, available in the service
            description: >
                This API returns all the available tags in the system, for partner with
                provided partnerId. Pagination support is not available for this API
                yet, so this API may return large amount of data depending upon tags
                present in the system.
            responses:
                "200":
                    description: Successful response with all available tags
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Tags"
                "500":
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
        post:
            tags:
                - Tickets
            summary: Creates a new tag
            description: >
                This API creates a new tag in the system. The 'id' parameter value in
                the request body is ignored, if provided. A new 'id' is created  for the
                newly created tag and provided in response body
            requestBody:
                description: thetag object to be created in the system
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Tag"
            responses:
                "201":
                    description: Tag creation successful
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Tag"
                "400":
                    description: Bad/invalid Request body
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
                "500":
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
    /api/platform/v1/service/ticketing/tags/{id}:
        delete:
            tags:
                - Tickets
            summary: Deletes a tag
            description: |
                The API deletes the stored tag from system.
            parameters:
                - name: id
                  in: path
                  description: the id of the tag to be deleted
                  required: true
                  schema:
                      type: string
                      format: uuid
            responses:
                "204":
                    description: Successful response indicating that deletion is successful
                "404":
                    description: the tag with id parameter value provided in path does not exist
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
                "500":
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
        get:
            tags:
                - Tickets
            summary: Returns a tag
            description: |
                Fetches the tag stored in the system against the provided id.
            parameters:
                - name: id
                  in: path
                  description: the id of the tag to be fetched
                  required: true
                  schema:
                      type: string
                      format: uuid
            responses:
                "200":
                    description: Successful response with tag in response body
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Tag"
                "404":
                    description: the tag with id parameter value provided in path does not exist
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
                "500":
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
        patch:
            tags:
                - Tickets
            summary: Updates a tag
            description: >
                This API updates the existing tag based on JSON Patch request received.
                This API is suitable for changing specific fields of the tag without
                replacing the entire tag object. For more details on JSON Patch, please
                check http://jsonpatch.com/ The 'id' parameter value in the request body
                is ignored, if sent and 'id' parameter value from path is used as tag id
                for this API
            parameters:
                - name: id
                  in: path
                  description: the id of the tag to be updated
                  required: true
                  schema:
                      type: string
                      format: uuid
            requestBody:
                description: the tag object to be updated in the system
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/json-patch"
            responses:
                "200":
                    description: Successful response with patched tag in response body
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Tag"
                "404":
                    description: the tag with id parameter value provided in path does not exist
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
                "405":
                    description: Only replace operation is allowed
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
                "500":
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
        put:
            tags:
                - Tickets
            summary: Replace a tag
            description: >
                This API replaces the existing tag matching provided id with the one
                provided in the request body. All the tag parameter values, except for
                'id', are replaced with their correspoding values from request body of
                this API call. If certain parameter is absent in the request body, it's
                default value is used, if possible. The 'id' parameter value in the
                request body is ignored, if sent and 'id' parameter value from path is
                used as tag id for this API
            parameters:
                - name: id
                  in: path
                  description: the id of the tag to be replaced
                  required: true
                  schema:
                      type: string
                      format: uuid
            requestBody:
                description: the tag object to be replaced in the system
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Tag"
            responses:
                "200":
                    description: Successful response with updated tag in response body
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Tag"
                "400":
                    description: Bad/invalid Request body
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
                "404":
                    description: the tag with id parameter value provided in path does not exist
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
                "500":
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
    /api/platform/v1/service/ticketing/ticket-counts:
        get:
            tags:
                - Tickets
            summary: Returns ticket counts
            description: |
                This API returns ticket counts
            responses:
                "200":
                    description: Successful response with ticket counts
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketCounts"
                "500":
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
    /api/platform/v1/service/ticketing/tickets:
        get:
            tags:
                - Tickets
            summary: Returns selected Service tickets
            description: |
                This API returns selected tickets in the service. Pagination and filtering support is available, see details below.

                For support for Filtering, please note below strategy. 
                In general, you can add as many filter criteria as required by adding those many query parameters. Each query parameter becomes one filter criterion 
                and these are ultimately *AND*ed together (tickets matching all criteria are filtered). 
                However there is a concept of group of criteria. Each filter query parameter supports (as indicated in description of parameter) an optional numeric suffix i.e 1, 2, etc.
                The query parameters which shares a common suffix become part of same group.
                This means ?number=123&statusIds=3a8e2efd-5b8a-4911-9824-8d897cf828d3&number1=3445&number2=55666 forms three groups of criteria as below

                  - group 1(with no suffix): number = 123 AND statusId = 3a8e2efd-5b8a-4911-9824-8d897cf828d3
                  - group 2(with suffix 1): number = 3445
                  - group 3(with suffix 2): number = 55666

                All the criteria in same group are *AND*ed and then groups themselves are *OR*ed. This allows almost any type of query formation while fitering the tickets.
            parameters:
                - name: pageSize
                  in: query
                  description:
                      the page size of single page of the paginated records. Must be a
                      positive integer i.e if number is negative, it is ignored. It shall
                      be noted that pageSize must be sent with pageNum (see next). If any
                      one of these two values is not present (but the other is present),
                      error is returned. Also, if value is present but is ignored (due to
                      being invalid), then pageNum is ignored.
                  schema:
                      type: integer
                - name: pageNum
                  in: query
                  description:
                      the page number of paginated record to be fetched. Must be a
                      positive integer i.e if number is negative, it is ignored. It shall
                      be noted that pageNum must be sent with pageSize (see above). If any
                      one of these two values is not present (but the other is present),
                      error is returned. Also, if value is present but is ignored (due to
                      being invalid), then pageSize is ignored. Care should be taken while
                      providing this value so as to not request page with non-existing
                      records, otherwise no records are returned and count of total record
                      returned is also zero.  E.g. if database contains 15 records, then
                      requesting pageSize of 10 and pageNum of 3 would return empty
                      response with total count of records as '0' even though there are 15
                      records in db. A good idea is to always start with pageNum '1' and
                      use the total records number returned in response to make further
                      calls.
                  schema:
                      type: integer
                - name: sortBy
                  in: query
                  description:
                      the id of field which should be used to sort the result before
                      paginating it. Supported values are 'assignTo', 'number',
                      'updatedAt', 'createdAt', 'status', 'type', 'priority' , 'summary',
                      'assignTeam', 'dueDate', 'source' and 'extendedAttributes'. If not
                      present, 'createdAt' is used as default.
                  schema:
                      type: string
                - name: sortDir
                  in: query
                  description:
                      defines if the paginated records are to be sorted ascending or
                      descending. Only two values are supported viz. 'asc' and 'desc'. In
                      case invalid value is sent, 'desc' is used as default
                  schema:
                      type: string
                - name: number
                  in: query
                  description: >
                      defines search condition by ticket number. For OR filter numeric
                      filter suffix can be added to name. See API description for
                      filtering strategy.
                  schema:
                      type: string
                - name: ticketIds
                  in: query
                  description: >
                      defines search condition by list of ticket ids (comma separated).
                      For OR filter numeric filter suffix can be added to name. 

                      See API description for filtering strategy.
                  schema:
                      type: string
                - name: summary
                  in: query
                  description: >
                      defines search condition by ticket summary. For OR filter numeric
                      filter suffix can be added to name. 

                      See API description for filtering strategy.
                  schema:
                      type: string
                - name: companyIds
                  in: query
                  description: >
                      in/not in filter, defines search condition by list of company ids
                      (comma separated). 

                      For OR filter numeric filter suffix can be added to name. See API
                      description for filtering strategy.

                      examples

                      in - "id1,id2"

                      not in - "[notIn],id1,id2"
                  schema:
                      type: string
                - name: siteIds
                  in: query
                  description:
                      in/not in filter, defines search condition by list of site ids
                      (comma separated). For OR filter numeric filter suffix can be added
                      to name. See API description for filtering strategy. examples in -
                      "id1,id2" not in - "[notIn],id1,id2"
                  schema:
                      type: string
                - name: statusIds
                  in: query
                  description:
                      in/not in filter, defines search condition by list of status ids
                      (comma separated). For OR filter numeric filter suffix can be added
                      to name. See API description for filtering strategy. examples in -
                      "id1,id2" not in - "[notIn],id1,id2"
                  schema:
                      type: string
                - name: statusNames
                  in: query
                  description:
                      defines search condition by list of status names (comma separated).
                      For OR filter numeric filter suffix can be added to name. See API
                      description for filtering strategy.examples - "name1,name2", not in
                      - "[notIn],name1,name2"
                  schema:
                      type: string
                - name: priorityIds
                  in: query
                  description:
                      in/not in filter, defines search condition by list of priority ids
                      (comma separated). For OR filter numeric filter suffix can be added
                      to name. See API description for filtering strategy. examples in -
                      "id1,id2" not in - "[notIn],id1,id2"
                  schema:
                      type: string
                - name: priorityNames
                  in: query
                  description:
                      defines search condition by list of priority names (comma
                      separated). For OR filter numeric filter suffix can be added to
                      name. See API description for filtering strategy.examples -
                      "name1,name2", not in - "[notIn],name1,name2"
                  schema:
                      type: string
                - name: assigneeIds
                  in: query
                  description:
                      defines search condition by list of assigee ids (comma separated).
                      For OR filter numeric filter suffix can be added to name. See API
                      description for filtering strategy.
                  schema:
                      type: string
                - name: assigneeTeamIds
                  in: query
                  description:
                      in/not in filter, defines search condition by list of assigneeTeam
                      ids (comma separated). For OR filter numeric filter suffix can be
                      added to name. See API description for filtering strategy. examples
                      in - "id1,id2" not in - "[notIn],id1,id2"
                  schema:
                      type: string
                - name: assigneeTeamNames
                  in: query
                  description:
                      defines search condition by list of assignee team names (comma
                      separated). For OR filter numeric filter suffix can be added to
                      name. See API description for filtering strategy.examples -
                      "name1,name2", not in - "[notIn],name1,name2"
                  schema:
                      type: string
                - name: sourceIds
                  in: query
                  description:
                      defines search condition by list of source ids (comma separated).
                      For OR filter numeric filter suffix can be added to name. See API
                      description for filtering strategy.
                  schema:
                      type: string
                - name: sourceNames
                  in: query
                  description:
                      defines search condition by list of source names (comma separated).
                      For OR filter numeric filter suffix can be added to name. See API
                      description for filtering strategy.
                  schema:
                      type: string
                - name: extendedAttributeIds
                  in: query
                  description:
                      defines search condition by list of extendedAttributeIds  (comma
                      separated). For OR filter is valid only for the first filter
                  schema:
                      type: string
                      format: uuid
                - name: typeIds
                  in: query
                  description:
                      in/not in filter, defines search condition by list of ticket type
                      ids (comma separated). For OR filter numeric filter suffix can be
                      added to name. See API description for filtering strategy. examples
                      in - "id1,id2" not in - "[notIn],id1,id2"
                  schema:
                      type: string
                - name: typeNames
                  in: query
                  description:
                      defines search condition by list of type names (comma separated).
                      For OR filter numeric filter suffix can be added to name. See API
                      description for filtering strategy. examples - "name1,name2", not in
                      - "[notIn],name1,name2"
                  schema:
                      type: string
                - name: categoryIds
                  in: query
                  description:
                      in/not in filter, defines search condition by list of ticket
                      category ids (comma separated). For OR filter numeric filter suffix
                      can be added to name. See API description for filtering strategy.
                      examples in - "id1,id2" not in - "[notIn],id1,id2"
                  schema:
                      type: string
                - name: categoryNames
                  in: query
                  description:
                      defines search condition by list of category names (comma
                      separated). For OR filter numeric filter suffix can be added to
                      name. See API description for filtering strategy. examples -
                      "name1,name2", not in - "[notIn],name1,name2"
                  schema:
                      type: string
                - name: createdByIds
                  in: query
                  description:
                      in/not in filter, defines search condition by list of ticket
                      createdBy ids (comma separated). For OR filter numeric filter suffix
                      can be added to name. See API description for filtering strategy.
                      examples in - "id1,id2" not in - "[notIn],id1,id2"
                  schema:
                      type: string
                - name: updatedByIds
                  in: query
                  description:
                      in/not in filter, defines search condition by list of ticket
                      updatedBy ids (comma separated). For OR filter numeric filter suffix
                      can be added to name. See API description for filtering strategy.
                      examples in - "id1,id2" not in - "[notIn],id1,id2"
                  schema:
                      type: string
                - name: createdAtFrom
                  in: query
                  description: >
                      start date and time to filter by createdAt field. For OR filter
                      numeric filter suffix can be added to name.

                      See API description for filtering strategy.

                      supports 3 value formats

                      1. date only - '2019-01-31'

                      2. date and time '2019-01-31T15:01:02'

                      3. rfc3339 - '2019-10-12T07:20:50.52+00:00'
                  schema:
                      type: string
                      format: date-time
                - name: createdAtTo
                  in: query
                  description: >
                      end date and time to filter by createdAt field. For OR filter
                      numeric filter suffix can be added to name.

                      See API description for filtering strategy.

                      supports 3 value formats

                      1. date only - '2019-01-31' - in this case actual end date will be
                      '2019-01-31T23:59:59'

                      2. date and time '2019-01-31T15:01:02'

                      3. rfc3339 - '2019-10-12T07:20:50.52+00:00'
                  schema:
                      type: string
                      format: date-time
                - name: updatedAtFrom
                  in: query
                  description: >
                      start date and time to filter by updatedAt field. For OR filter
                      numeric filter suffix can be added to name. 

                      See API description for filtering strategy.

                      supports 3 value formats

                      1. date only - '2019-01-31'

                      2. date and time '2019-01-31T15:01:02'

                      3. rfc3339 - '2019-10-12T07:20:50.52+00:00'
                  schema:
                      type: string
                      format: date-time
                - name: updatedAtTo
                  in: query
                  description: >
                      end date and time to filter by updatedAt field. For OR filter
                      numeric filter suffix can be added to name. 

                      See API description for filtering strategy.

                      supports 3 value formats

                      1. date only - '2019-01-31' - in this case actual end date will be
                      '2019-01-31T23:59:59'

                      2. date and time '2019-01-31T15:01:02'

                      3. rfc3339 - '2019-10-12T07:20:50.52+00:00'
                  schema:
                      type: string
                      format: date-time
                - name: dueDateFrom
                  in: query
                  description: >
                      start date and time to filter by dueDate field. For OR filter
                      numeric filter id can be added to name

                      supports 3 value formats

                      1. date only - '2019-01-31'

                      2. date and time '2019-01-31T15:01:02'

                      3. rfc3339 - '2019-10-12T07:20:50.52+00:00'
                  schema:
                      type: string
                      format: date-time
                - name: dueDateTo
                  in: query
                  description: >
                      end date and time to filter by dueDate field. For OR filter numeric
                      filter suffix can be added to name. 

                      See API description for filtering strategy.

                      supports 3 value formats

                      1. date only - '2019-01-31' - in this case actual end date will be
                      '2019-01-31T23:59:59'

                      2. date and time '2019-01-31T15:01:02'

                      3. rfc3339 - '2019-10-12T07:20:50.52+00:00'
                  schema:
                      type: string
                      format: date-time
                - name: tagIds
                  in: query
                  description:
                      defines search condition by list of tag ids (comma separated). For
                      OR filter numeric filter suffix can be added to name. See API
                      description for filtering strategy.
                  schema:
                      type: string
                - name: tagNames
                  in: query
                  description:
                      defines search condition by list of tag names (comma separated).
                      For OR filter numeric filter suffix can be added to name. See API
                      description for filtering strategy.
                  schema:
                      type: string
            responses:
                "200":
                    description: Successful response with all available tickets
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/PaginatedTickets"
                "500":
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
        post:
            tags:
                - Tickets
            summary: Creates a new Service ticket
            description: >
                This API creates a new ticket in the system.

                The 'read-only' parameters in the request body are ignored, if provided.
                See request body schema for details.
            requestBody:
                description: the ticket object to be created in the system
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Ticket"
            responses:
                "201":
                    description: Ticket creation successful
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Ticket"
                "400":
                    description: Bad/invalid Request body
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
                "500":
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
    /api/platform/v1/service/ticketing/tickets/{id}:
        get:
            tags:
                - Tickets
            summary: Returns a Service ticket
            description: |
                Fetches the ticket stored in the system against the provided id.
            parameters:
                - name: id
                  in: path
                  description: the id of the ticket to be fetched
                  required: true
                  schema:
                      type: string
                      format: uuid
            responses:
                "200":
                    description: Successful response with ticket in response body
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Ticket"
                "404":
                    description: the ticket with id parameter value provided in path does not exist
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
                "500":
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
        patch:
            tags:
                - Tickets
            summary: Updates a Service ticket
            description: >
                This API updates the existing ticket based on JSON Patch request
                received.

                This API is suitable for changing specific fields of ticket without
                replacing the entire ticket object.

                For more details on JSON Patch, please check http://jsonpatch.com/

                The 'read-only' fields of ticket body cannot be updated using this API.
                For getting 'read-only' fields info, see ticket

                schema details
            parameters:
                - name: id
                  in: path
                  description: the id of the ticket to be updated
                  required: true
                  schema:
                      type: string
                      format: uuid
            requestBody:
                description: the ticket object to be updated in the system
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/json-patch"
            responses:
                "200":
                    description: Successful response with patched ticket in response body
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Ticket"
                "400":
                    description: the request body is invalid.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
                "404":
                    description: the ticket with id parameter value provided in path does not exist
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
                "405":
                    description: Only replace operation is allowed
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
                "500":
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
        put:
            tags:
                - Tickets
            summary: Replace a Service ticket
            description: >
                This API replaces the existing ticket matching provided number with the
                one provided in the request body.

                The ticket parameter values, except for 'read-only' ones (see request
                body documentation), are replaced with their correspoding values

                from request body of this API call.

                If certain parameter is absent in the request body, it's default value
                may be used (if available).
            parameters:
                - name: id
                  in: path
                  description: the id of the ticket to be replaced
                  required: true
                  schema:
                      type: string
                      format: uuid
            requestBody:
                description: the ticket object to be replaced in the system
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Ticket"
            responses:
                "200":
                    description: Successful response with updated ticket in response body
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Ticket"
                "400":
                    description: Bad/invalid Request body
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
                "404":
                    description: the ticket with id parameter value provided in path does not exist
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
                "500":
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
    /api/platform/v1/service/ticketing/tickets/{id}/notes:
        get:
            tags:
                - Tickets
            summary: Returns selected Notes for Service ticket
            description: >
                This API fetches the selected notes for a specific ticket from system
                and returns it.
            parameters:
                - name: id
                  in: path
                  description: the id of the ticket for which notes API is being called
                  required: true
                  schema:
                      type: string
                      format: uuid
                - name: detail
                  in: query
                  description: filter by note detail
                  schema:
                      type: string
                - name: extendedAttributeIds
                  in: query
                  description: filter by extendedAttributeIds
                  schema:
                      type: string
                - name: visibility
                  in: query
                  description: >
                      a comma separated list of visibility ids to filter by note
                      visibility field Visibility of the note:
                       * 1 - Visible to all
                       * 2 - Visible to a specific partner
                       * 7 - Expert services,visible to partner and expert service users
                       * 8 - Expert users,visible to expert users
                  schema:
                      type: string
                      example: Id1,Id2
                - name: createdBy
                  in: query
                  description: a comma separated list of user ids to filter by note createdBy field
                  schema:
                      type: string
                      example: userId1,userId2
                - name: createdAtFrom
                  in: query
                  description: |
                      start date and time to filter by createdAt field
                      supports 3 value formats
                      1. date only - '2019-01-31'
                      2. date and time '2019-01-31T15:01:02'
                      3. rfc3339 - '2019-10-12T07:20:50.52+00:00'
                  schema:
                      type: string
                      format: date-time
                - name: createdAtTo
                  in: query
                  description: >
                      end date and time to filter by createdAt field

                      supports 3 value formats

                      1. date only - '2019-01-31' - in this case actual end date will be
                      '2019-01-31T23:59:59'

                      2. date and time '2019-01-31T15:01:02'

                      3. rfc3339 - '2019-10-12T07:20:50.52+00:00'
                  schema:
                      type: string
                      format: date-time
            responses:
                "200":
                    description: Successful response with selected notes for a specific ticket
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketNotes"
                "500":
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
        post:
            tags:
                - Tickets
            summary: Creates a new Note for a Service ticket
            description: >
                This API creates a new note for the specified ticket in the system. The
                'id' parameter value in the request body is ignored, if provided. A new
                'id' is created  for the newly created note and provided in response
                body
            parameters:
                - name: id
                  in: path
                  description: the id of the ticket for which notes API is being called
                  required: true
                  schema:
                      type: string
                      format: uuid
            requestBody:
                description: the note object to be created in the system
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/TicketNoteRequest"
            responses:
                "201":
                    description: note creation successful
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketNote"
                "400":
                    description: Bad/invalid Request body
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
                "500":
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
    /api/platform/v1/service/ticketing/tickets/{id}/notes/{noteId}:
        get:
            tags:
                - Tickets
            summary: Returns a Note for a Service ticket
            description: |
                Fetches the ticket note stored in the system against the provided id.
            parameters:
                - name: noteId
                  in: path
                  description: the id of the note to be fetched
                  required: true
                  schema:
                      type: string
                      format: uuid
                - name: id
                  in: path
                  description: the id of the ticket for which notes API is being called
                  required: true
                  schema:
                      type: string
                      format: uuid
            responses:
                "200":
                    description: Successful response with ticket note in response body
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketNote"
                "404":
                    description:
                        the ticket note with id parameter value provided in path does not
                        exist
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
                "500":
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
        patch:
            tags:
                - Tickets
            summary: Updates a Note for a Service ticket
            description: >
                This API updates the existing note based on JSON Patch request received.
                This API is suitable for changing specific fields of note without
                replacing the entire note object. For more details on JSON Patch, please
                check http://jsonpatch.com/ The 'id' parameter value in the request body
                is ignored, if sent and 'id' parameter value from path is used as note
                id for this API
            parameters:
                - name: noteId
                  in: path
                  description: the id of the note to be fetched
                  required: true
                  schema:
                      type: string
                      format: uuid
                - name: id
                  in: path
                  description: the id of the ticket for which notes API is being called
                  required: true
                  schema:
                      type: string
                      format: uuid
            requestBody:
                description: the note object to be updated in the system
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/json-patch"
            responses:
                "200":
                    description: Successful response with patched note in response body
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketNote"
                "404":
                    description:
                        the ticket note with id parameter value provided in path does not
                        exist
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
                "405":
                    description: Only replace operation is allowed
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
                "500":
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
        put:
            tags:
                - Tickets
            summary: Replace a Note for a Service ticket
            description: >
                This API replaces the existing ticket note matching provided id with the
                one provided in the request body. All the note parameter values, except
                for 'id', are replaced with their correspoding values from request body
                of this API call. If certain parameter is absent in the request body,
                it's default value is used. The 'id' parameter value in the request body
                is ignored, if sent and 'id' parameter value from path is used as note
                id for this API
            parameters:
                - name: noteId
                  in: path
                  description: the id of the note to be fetched
                  required: true
                  schema:
                      type: string
                      format: uuid
                - name: id
                  in: path
                  description: the id of the ticket for which notes API is being called
                  required: true
                  schema:
                      type: string
                      format: uuid
            requestBody:
                description: the note object to be replaced in the system
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/TicketNoteRequest"
            responses:
                "200":
                    description: Successful response with updated note in response body
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketNote"
                "400":
                    description: Bad/invalid Request body
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
                "404":
                    description:
                        the ticket note with id parameter value provided in path does not
                        exist
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
                "500":
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
    /api/platform/v1/service/ticketing/types:
        get:
            tags:
                - Tickets
            summary: Returns all ticket types
            description: >
                This API returns all the available types in the system. Pagination
                support is not available for this API yet, so this API may return large
                amount of data depending upon types present in the system.
            parameters:
                - name: entity
                  in: query
                  description:
                      Fetches the type stored in the system against the provided entity,
                      the possible values is assignment
                  schema:
                      type: string
            responses:
                "200":
                    description: Successful response with all available types
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Types"
                "500":
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TicketAPIErrors"
    /api/platform/v1/custom-field/definitions:
        get:
            security:
                - custom_fields:
                      - platform.custom_fields_definitions.read
            tags:
                - Custom Fields Definitions
            summary:
                Get the list of custom fields definitions for the given partner,
                including the vendor provided and partner defined.
            parameters:
                - $ref: "#/components/parameters/EntityTypeQuery"
                - $ref: "#/components/parameters/OriginType"
            responses:
                "200":
                    description: Successfully retrieved partner attribute definitions
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    allOf:
                                        - $ref: "#/components/schemas/PartnerAttributeDefinition"
                "500":
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
        post:
            security:
                - custom_fields:
                      - platform.custom_fields_definitions.write
            tags:
                - Custom Fields Definitions
            summary: Create a new custom fields definition schema
            requestBody:
                $ref: "#/components/requestBodies/PartnerAttributeDefinitionPOST"
            responses:
                "201":
                    description: Attribute definition added successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/PartnerAttributeDefinition"
                "400":
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                "409":
                    description: Already exists
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                "500":
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
    /api/platform/v1/custom-field/definitions/{definitionID}:
        get:
            security:
                - custom_fields:
                      - platform.custom_fields_definitions.read
            tags:
                - Custom Fields Definitions
            summary: Get the schema for the definition by the given definition id
            parameters:
                - $ref: "#/components/parameters/DefinitionID"
            responses:
                "200":
                    description: Successfully retrieved the schema for the attribute definition
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/PartnerAttributeDefinition"
                "400":
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                "404":
                    description: Partner not found / Definition not found
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                "500":
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
        put:
            security:
                - custom_fields:
                      - platform.custom_fields_definitions.write
            tags:
                - Custom Fields Definitions
            summary: Update the schema for the definition by the given definition id
            parameters:
                - $ref: "#/components/parameters/DefinitionID"
            requestBody:
                $ref: "#/components/requestBodies/PartnerAttributeDefinitionPUT"
            responses:
                "200":
                    description: Successfully updated attribute definition
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/PartnerAttributeDefinition"
                "400":
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                "404":
                    description: Partner not found / Definition not found
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                "409":
                    description: Already exists
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                "500":
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
        delete:
            security:
                - custom_fields:
                      - platform.custom_fields_definitions.write
            tags:
                - Custom Fields Definitions
            summary: Delete definition and all its values by given id
            parameters:
                - $ref: "#/components/parameters/DefinitionID"
            responses:
                "204":
                    description: Attribute definition deleted successfully
                    content: {}
                "400":
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                "404":
                    description: Attribute definition not found / Partner not found
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                "409":
                    description: Conflict
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/ReferenceResponse"
                "500":
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
    /api/platform/v1/device/endpoints/{endpointID}/custom-fields:
        get:
            security:
                - custom_fields:
                      - platform.custom_fields_values.read
            tags:
                - Custom Fields Values
            summary: Retrieve multiple values of custom fields for the specific endpoint
            parameters:
                - $ref: "#/components/parameters/EndpointID"
                - $ref: "#/components/parameters/AttributeIDs"
                - $ref: "#/components/parameters/WithDefaults"
                - $ref: "#/components/parameters/OriginType"
                - $ref: "#/components/parameters/OwnerID"
            responses:
                "200":
                    description: Retrieve all external attributes for the provided Entity
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/AttributeValue"
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                "404":
                    description: Attribute definition not found
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                "500":
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
        put:
            security:
                - custom_fields:
                      - platform.custom_fields_values.write
            tags:
                - Custom Fields Values
            summary: Updates multiple custom fields values for the given endpoint
            parameters:
                - $ref: "#/components/parameters/EndpointID"
            requestBody:
                $ref: "#/components/requestBodies/PartnerAttributeValuesPUT"
            responses:
                "200":
                    description: Attribute value successfully saved
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/AttributeValue"
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                "500":
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
    /api/platform/v1/company/companies/{companyId}/custom-fields:
        get:
            security:
                - custom_fields:
                      - platform.custom_fields_values.read
            tags:
                - Custom Fields Values
            summary: Retrieve multiple values of custom fields for the specific company
            parameters:
                - $ref: "#/components/parameters/CompanyID"
                - $ref: "#/components/parameters/AttributeIDs"
                - $ref: "#/components/parameters/WithDefaults"
                - $ref: "#/components/parameters/OriginType"
                - $ref: "#/components/parameters/OwnerID"
            responses:
                "200":
                    description: Retrieve all external attributes for the provided Entity
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/AttributeValue"
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                "404":
                    description: Attribute definition not found
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                "500":
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
        put:
            security:
                - custom_fields:
                      - platform.custom_fields_values.write
            tags:
                - Custom Fields Values
            summary: Updates multiple custom fields values for the given company
            parameters:
                - $ref: "#/components/parameters/CompanyID"
            requestBody:
                $ref: "#/components/requestBodies/PartnerAttributeValuesPUT"
            responses:
                "200":
                    description: Attribute value successfully saved
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/AttributeValue"
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                "500":
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
    api/platform/v1/company/sites/{siteId}/custom-fields:
        get:
            security:
                - custom_fields:
                      - platform.custom_fields_values.read
            tags:
                - Custom Fields Values
            summary: Retrieve multiple values of custom fields for the specific site
            parameters:
                - $ref: "#/components/parameters/SiteID"
                - $ref: "#/components/parameters/AttributeIDs"
                - $ref: "#/components/parameters/WithDefaults"
                - $ref: "#/components/parameters/OriginType"
                - $ref: "#/components/parameters/OwnerID"
            responses:
                "200":
                    description: Retrieve all external attributes for the provided Entity
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/AttributeValue"
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                "404":
                    description: Attribute definition not found
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                "500":
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
        put:
            security:
                - custom_fields:
                      - platform.custom_fields_values.write
            tags:
                - Custom Fields Values
            summary: Updates multiple custom fields values for the given site
            parameters:
                - $ref: "#/components/parameters/SiteID"
            requestBody:
                $ref: "#/components/requestBodies/PartnerAttributeValuesPUT"
            responses:
                "200":
                    description: Attribute value successfully saved
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/AttributeValue"
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                "500":
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
    api/platform/v1/patching/{endpointID}/patches:
        get:
            tags:
                - OS Patching
            summary: Get list of patches by endpoint.
            x-cw-openapi:
                api-path: /v1/patching/{endpointID}/patches
                api-scopes:
                    - platform.patching.read
            parameters:
                - $ref: "#/components/parameters/partnerIdparam"
                - $ref: "#/components/parameters/endpointIdparam"
            responses:
                "200":
                    description: Successful get list of patches
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/PatchDetails"
                "400":
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorMessage"
                "401":
                    description: Partner is not entitled for the feature
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorMessage"
                "404":
                    description: Endpoint patches not found
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorMessage"
                "500":
                    description: Server error
    /api/platform/v1/device/endpoints/{endpointId}/system-state-info:
        get:
            tags:
                - Devices
            summary: Get System State Information of Endpoint
            operationId: System State Information of Endpoint
            security:
                - devices_read:
                      - platform.devices.read
            parameters:
                - $ref: "#/components/parameters/endpointIdparam"
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/SystemStateCollection"
                "404":
                    description: Not found
                "500":
                    description: Internal Server Error
    /api/platform/v1/client-billing/product-usage:
        post:
            tags:
                - Billing
            summary: Upload the vendor product usage for the partner
            operationId: Schedule Task
            security:
                - product_usage_upload:
                      - platform.client_billing.write
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UsageUpload"
            responses:
                "200":
                    description: Success response for the product usage upload
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UsageCreate"
                "422":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/BillingAPIError"
                "500":
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/BillingAPIError"
    /api/platform/v1/device-groups:
        get:
            tags:
                - Device Groups
            summary: Fetch all Device Groups
            operationId: Get details of Devices Groups
            security:
                - device_groups:
                      - platform.deviceGroups.read
            responses:
                "200":
                    description: DGs are retrieved successfully.
                    headers:
                        Access-Control-Allow-Origin:
                            description: in:header
                            schema:
                                type: string
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/DeviceGroupWithRootBlockInVersionedPayload"
                "403":
                    description: Forbidden.
                    headers:
                        Access-Control-Allow-Origin:
                            description: in:header
                            schema:
                                type: string
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Message"
                "500":
                    description: Internal server error while request handling.
                    headers:
                        Access-Control-Allow-Origin:
                            description: in:header
                            schema:
                                type: string
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Message"
    /api/platform/v1/automation/shellScripts:
        get:
            tags:
                - Automation
            summary: Fetch all Shell Scripts
            operationId: Get details of Shell Scripts
            security:
                - automation_read:
                      - platform.automation.read
            responses:
                "200":
                    description: Successfully returned list of all shell scripts
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TemplateMetaData"
                "403":
                    description: Forbidden user is not entitled to view the templates
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorShellScripts"
                "500":
                    description: Can not get shell templates
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorShellScripts"
    /api/platform/v1/automation/scripts:
        get:
            tags:
                - Automation
            summary: Fetch all Scripts
            operationId: Get details of Scripts
            security:
                - automation_read:
                      - platform.automation.read
            responses:
                "200":
                    description: Scripts
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Scripts"
                "400":
                    description: Request Processing / validation failed
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorScripts"
                "401":
                    description: Authentication Failure
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorScripts"
                "403":
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorScripts"
                "404":
                    description: Scripts not found
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorScripts"
                "500":
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorScripts"
    /api/platform/v1/automation/tasks:
        get:
            tags:
                - Automation
            summary: Fetch all Tasks
            operationId: Get details of Tasks
            security:
                - automation_read:
                      - platform.automation.read
            responses:
                "200":
                    description: Successfully retrieved the list of TasksDefinitions by partner ID
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/TaskDefinitionDetails"
                "401":
                    description: In-valid bearer Token
                    content:
                        text/plain:
                            schema:
                                $ref: "#/components/schemas/ErrorInvalidTasks"
                "403":
                    description: In-valid Permission Vector OR JWTToken
                    content:
                        text/plain:
                            schema:
                                $ref: "#/components/schemas/ErrorForbiddenTasks"
                "500":
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorTasks"
    /api/platform/v1/mapping/mappings/lookup:
        post:
            tags:
                - Data Mapping
            summary:
                Returns attributes for the given schemaId based on source attributes
                provided from the data source
            security:
                - dataMapping_read:
                      - platform.dataMapping.read
            requestBody:
                description: the information needed to perform the lookup
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/LookupRequest"
                        examples:
                            lookupExample:
                                summary: Example Lookup Request
                                value:
                                    schemas:
                                        - id: c8f72634-ba9e-11ee-a506-0242ac120002
                                        - id: 62389508-ba36-11ee-8f19-8e275c7899e4
                                          reverse: true
                                    criteria:
                                        sourceAttributes:
                                            serviceBoard: Board A
                                        targetAttributesRequest:
                                            - priority
                                            - severity
            responses:
                "200":
                    description: The result of the lookups
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/LookupResponse"
                            examples:
                                lookupResponseExample:
                                    summary: Example Lookup Response
                                    value:
                                        completeMatch: true
                                        matchedSchemaIds:
                                            - 62389508-ba36-11ee-8f19-8e275c7899e4
                                        matchedAttributes:
                                            priority: High
                                            severity: Critical
    /api/platform/v1/policy/clients/{clientID}/sites/{siteID}/endpoints/{endpointID}/effective-policy:
        get:
            tags:
                - Policy
            summary: Get Effective Policy for the endpoint.
            security:
                - policy_read:
                      - platform.policies.read
            parameters:
                - $ref: "#/components/parameters/clientIdparam"
                - $ref: "#/components/parameters/siteIdparam"
                - $ref: "#/components/parameters/endpointIdparam"
            responses:
                "200":
                    description: Effective policy for container.
                    headers:
                        Access-Control-Allow-Origin:
                            description: in:header
                            schema:
                                type: string
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/EffectivePolicy"
                "400":
                    description: Incorrect incoming request data
                    headers:
                        Access-Control-Allow-Origin:
                            description: in:header
                            schema:
                                type: string
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/errorResponse"
                "403":
                    description: Forbidden
                    headers:
                        Access-Control-Allow-Origin:
                            description: in:header
                            schema:
                                type: string
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/errorResponse"
                "404":
                    description: Nothing found by incoming request data
                    headers:
                        Access-Control-Allow-Origin:
                            description: in:header
                            schema:
                                type: string
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/errorResponse"
                "500":
                    description: Internal server error while request handling
                    headers:
                        Access-Control-Allow-Origin:
                            description: in:header
                            schema:
                                type: string
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/errorResponse"
    /api/platform/v1/policy/clients/{clientID}/sites/{siteID}/endpoints/{endpointID}/effective-policy/override:
        get:
            tags:
                - Policy
            summary: Get Effective Policy Override for an Endpoint.
            security:
                - policy_read:
                      - platform.policies.read
            parameters:
                - $ref: "#/components/parameters/clientIdparam"
                - $ref: "#/components/parameters/siteIdparam"
                - $ref: "#/components/parameters/endpointIdparam"
            responses:
                "200":
                    description: Effective policy for container.
                    headers:
                        Access-Control-Allow-Origin:
                            description: in:header
                            schema:
                                type: string
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/OverrideGetBody"
                "400":
                    description: Incorrect incoming request data
                    headers:
                        Access-Control-Allow-Origin:
                            description: in:header
                            schema:
                                type: string
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/errorResponse"
                "403":
                    description: Forbidden
                    headers:
                        Access-Control-Allow-Origin:
                            description: in:header
                            schema:
                                type: string
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/errorResponse"
                "404":
                    description: Nothing found by incoming request data
                    headers:
                        Access-Control-Allow-Origin:
                            description: in:header
                            schema:
                                type: string
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/errorResponse"
                "500":
                    description: Internal server error while request handling
                    headers:
                        Access-Control-Allow-Origin:
                            description: in:header
                            schema:
                                type: string
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/errorResponse"
    /api/platform/v1/policy/categories:
        get:
            tags:
                - Policy
            summary: Fetch categories and subcategories.
            security:
                - policy_read:
                      - platform.policies.read
            responses:
                "200":
                    description: Fetch categories and subcategories response.
                    headers:
                        Access-Control-Allow-Origin:
                            schema:
                                type: string
                            description: in:header
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/DefinitionCategoriesGetBody"
                "500":
                    description: Internal server error while request handling
                    headers:
                        Access-Control-Allow-Origin:
                            description: in:header
                            schema:
                                type: string
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/errorResponse"
    /api/platform/v1/device/hypervisors/clients/{clientID}/sites/{siteID}/hosts/{hostID}/guests:
        get:
            tags:
                - Devices
            summary: Fetch hypervisors Guests.
            security:
                - devices_read:
                      - platform.devices.read
            parameters:
                - $ref: "#/components/parameters/clientIdparam"
                - $ref: "#/components/parameters/siteIdparam"
                - $ref: "#/components/parameters/hostID"
                - $ref: "#/components/parameters/userType"
            responses:
                "200":
                    description: Retrieved guest details successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/guestinventory"
                "404":
                    description: Resource not found
                    content: {}
                "500":
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/errorHosts"
    /api/platform/v1/device/hypervisors/hosts:
        get:
            tags:
                - Devices
            description: Fetch hypervisors Hosts.
            security:
                - devices_read:
                      - platform.devices.read
            responses:
                "200":
                    description: Found the VMware Hosts
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/monitorResponse"
                "401":
                    description: Error Invalid Authorization Token
                "404":
                    description: NO MONITORING HOSTS FOUND
                "500":
                    description: failed to get monitoring hosts
    /api/v1/lookup:
        post:
            summary:
                Returns attributes for the given schemaId based on source attributes
                provided from the data source
            tags:
                - MappingService
            parameters:
                - in: query
                  name: all
                  schema:
                      type: boolean
                  description: |-
                      Allows fetching multiple records based on values in criteria.
                      It can either be true or false where default is false.
                  required: false
            x-cw-openapi:
                api-path: /v1/mapping/mappings/lookup
                api-scopes:
                    - platform.dataMapping.read
                filters:
                    - api-scope: platform.dataMapping.read
            requestBody:
                description: the information needed to perform the lookup
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/LookupRequest"
                        examples:
                            lookupExample:
                                summary: Example Lookup Request
                                value:
                                    schemas:
                                        - id: c8f72634-ba9e-11ee-a506-0242ac120002
                                        - id: 62389508-ba36-11ee-8f19-8e275c7899e4
                                          reverse: true
                                    criteria:
                                        sourceAttributes:
                                            serviceBoard: Board A
                                        targetAttributesRequest:
                                            - priority
                                            - severity
            responses:
                "200":
                    description: The result of the lookups
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/LookupResponse"
                            examples:
                                lookupResponseExample:
                                    summary: Example Lookup Response
                                    value:
                                        completeMatch: true
                                        matchedSchemaIds:
                                            - 62389508-ba36-11ee-8f19-8e275c7899e4
                                        matchedAttributes:
                                            priority: High
                                            severity: Critical
    /api/v1/incidents:
        post:
            x-cw-openapi:
                api-path: /v1/security360/incidents
                api-scopes:
                    - security.security360.write
            tags:
                - Incidents/Alerts
            summary: Add/update alert details for the incident
            description:
                This API ingests data from the Microsoft Graph and SentinelOne
                Sites APIs. It updates incident details including alerts, mitre
                techniques, and evidences for Microsoft, and alerts and mitre techniques
                for SentinelOne. Additionally, it saves the identity score for all
                incidents. Please note that for a SentinelOne incident, the mitre
                techniques field is an array of objects, not a string.
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: object
                                properties:
                                    partnerId:
                                        type: string
                                    siteId:
                                        type: string
                                    companyId:
                                        type: string
                                    legacyClientId:
                                        type: string
                                    legacySiteId:
                                        type: string
                                    vendorEndpointId:
                                        type: string
                                    vendorFriendlyName:
                                        type: string
                                    tenantId:
                                        type: string
                                    alertId:
                                        type: string
                                    incidentId:
                                        type: string
                                    incidentStatus:
                                        type: string
                                    incidentDisplayName:
                                        type: string
                                    incidentSeverity:
                                        type: string
                                    incidentCreatedDateTime:
                                        type: string
                                        format: date-time
                                        x-go-name: TimeStampUTC
                                    incidentLastUpdateDateTime:
                                        type: string
                                        format: date-time
                                        x-go-name: TimeStampUTC
                                    incidentResolvingComment:
                                        type: string
                                    alertStatus:
                                        type: string
                                    alertSeverity:
                                        type: string
                                    alertDetectionSource:
                                        type: string
                                    alertTitle:
                                        type: string
                                    alertDescription:
                                        type: string
                                    type:
                                        type: string
                                    source:
                                        type: string
                                    alertCategory:
                                        type: string
                                    alertRecommendedActions:
                                        type: string
                                    threatDisplayName:
                                        type: string
                                    threatFamilyName:
                                        type: string
                                    alertCreatedDateTime:
                                        type: string
                                        format: date-time
                                        x-go-name: TimeStampUTC
                                    alertLastUpdateDateTime:
                                        type: string
                                        format: date-time
                                        x-go-name: TimeStampUTC
                                    alertResolvedDateTime:
                                        type: string
                                        format: date-time
                                        x-go-name: TimeStampUTC
                                    mitreTechniques:
                                        type: string
                                    alertSubcategory1:
                                        type: string
                                    alertSubcategory2:
                                        type: string
                                    alertSubcategory3:
                                        type: string
                                    alertSubcategory4:
                                        type: string
                                    evidence:
                                        type: array
                                        items:
                                            type: object
                                            additionalProperties: {}
                                    endpointId:
                                        type: string
            responses:
                "201":
                    description: Successful response
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: "#/components/schemas/IncidentDataResponse201AllSuccess"
                                    - $ref: "#/components/schemas/IncidentDataResponse201SomeFailed"
                "400":
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/errorresponse"
                "401":
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/errorresponse"
                "500":
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/errorresponse"
components:
    schemas:
        DatasetRequest:
            type: object
            example:
                monitor_type: Monitor1
                serviceBoard: Board A
                serviceBoardId: 201
        Error:
            description: Error response
            type: object
            properties:
                error:
                    type: string
                description:
                    type: string
        Company:
            description: Company is the struct definition of a Company
            properties:
                account:
                    description:
                        CompanyAccountReference is the reference struct to be returned with
                        Company info
                    properties:
                        id:
                            type: string
                        name:
                            type: string
                    type: object
                acquiredDate:
                    format: date-time
                    type: string
                activityStatus:
                    description:
                        CompanyActivityStatusReference is the reference struct to be
                        returned with Company info
                    properties:
                        activeFlag:
                            type: boolean
                        defaultFlag:
                            type: boolean
                        id:
                            type: string
                        name:
                            type: string
                    type: object
                corpContainer:
                    properties:
                        id:
                            type: string
                        name:
                            type: string
                        partnerId:
                            type: string
                        reportsToContainerId:
                            type: string
                    type: object
                createdBy:
                    type: string
                createdDate:
                    format: date-time
                    type: string
                deleteTxnId:
                    type: string
                deletedBy:
                    type: string
                deletedDate:
                    format: date-time
                    type: string
                description:
                    type: string
                externalIds:
                    items:
                        description: >-
                            CompanyIdMappingReference : reference struct used by company to
                            return

                            id mapping in additon to company data.
                        properties:
                            companyId:
                                type: string
                            externalId:
                                type: string
                            id:
                                type: string
                            productId:
                                type: string
                            productInstanceId:
                                type: string
                        type: object
                    type: array
                friendlyName:
                    type: string
                id:
                    type: string
                inactiveDate:
                    format: date-time
                    type: string
                industryCode:
                    type: string
                name:
                    type: string
                ownershipType:
                    description:
                        CompanyOwnerShipTypeReference is the reference struct to be
                        returned with Company info
                    properties:
                        defaultFlag:
                            type: boolean
                        id:
                            type: string
                        name:
                            type: string
                    type: object
                partnerId:
                    type: string
                primaryContact:
                    description:
                        "ContactReference : a reference struct used by other entities like
                        company, but not sub-entities"
                    properties:
                        description:
                            type: string
                        firstName:
                            type: string
                        id:
                            type: string
                        lastName:
                            type: string
                        primaryAddress:
                            description:
                                AddressReference is the subset address struct to be returned with
                                contct info
                            properties:
                                addressLine1:
                                    type: string
                                addressLine2:
                                    type: string
                                addressLine3:
                                    type: string
                                addressLine4:
                                    type: string
                                administrativeArea:
                                    type: string
                                billingFlag:
                                    type: boolean
                                country:
                                    type: string
                                countryCode:
                                    type: string
                                dependentLocality:
                                    type: string
                                description:
                                    type: string
                                id:
                                    type: string
                                locality:
                                    type: string
                                name:
                                    type: string
                                postCode:
                                    type: string
                                primaryFlag:
                                    type: boolean
                                shippingFlag:
                                    type: boolean
                                timeZone:
                                    type: string
                                type:
                                    description:
                                        Used in POST/PUT/PATCH requests to allow having the same JSON path
                                        as in GET, but to only allow setting an ID on this
                                        referenced entity, not other fields
                                    properties:
                                        id:
                                            type: string
                                    title: Allows specifying a reference by ID only.
                                    type: object
                            type: object
                        primaryEmail:
                            description: EmailReference is the struct definition of a Email
                            properties:
                                activeFlag:
                                    type: boolean
                                description:
                                    type: string
                                emailAddress:
                                    type: string
                                id:
                                    type: string
                                primaryFlag:
                                    type: boolean
                                type:
                                    description:
                                        Used in POST/PUT/PATCH requests to allow having the same JSON path
                                        as in GET, but to only allow setting an ID on this
                                        referenced entity, not other fields
                                    properties:
                                        id:
                                            type: string
                                    title: Allows specifying a reference by ID only.
                                    type: object
                            type: object
                        primaryFaxNumber:
                            description: FaxNumberReference
                            properties:
                                activeFlag:
                                    type: boolean
                                description:
                                    type: string
                                extension:
                                    type: string
                                id:
                                    type: string
                                nationalNumber:
                                    type: string
                                primaryFlag:
                                    type: boolean
                                type:
                                    description:
                                        Used in POST/PUT/PATCH requests to allow having the same JSON path
                                        as in GET, but to only allow setting an ID on this
                                        referenced entity, not other fields
                                    properties:
                                        id:
                                            type: string
                                    title: Allows specifying a reference by ID only.
                                    type: object
                            type: object
                        primaryPhoneNumber:
                            description: PhoneNumberReference
                            properties:
                                activeFlag:
                                    type: boolean
                                countryCode:
                                    type: string
                                description:
                                    type: string
                                designation:
                                    type: string
                                extension:
                                    type: string
                                id:
                                    type: string
                                nationalNumber:
                                    type: string
                                primaryFlag:
                                    type: boolean
                                type:
                                    description:
                                        Used in POST/PUT/PATCH requests to allow having the same JSON path
                                        as in GET, but to only allow setting an ID on this
                                        referenced entity, not other fields
                                    properties:
                                        id:
                                            type: string
                                    title: Allows specifying a reference by ID only.
                                    type: object
                            type: object
                        primarySocialMedia:
                            description:
                                SocialMediaReference is the reference struct to be returned with
                                contact info
                            properties:
                                activeFlag:
                                    type: boolean
                                description:
                                    type: string
                                id:
                                    type: string
                                link:
                                    type: string
                                primaryFlag:
                                    type: boolean
                                type:
                                    description:
                                        Used in POST/PUT/PATCH requests to allow having the same JSON path
                                        as in GET, but to only allow setting an ID on this
                                        referenced entity, not other fields
                                    properties:
                                        id:
                                            type: string
                                    title: Allows specifying a reference by ID only.
                                    type: object
                            type: object
                        salutation:
                            type: string
                        title:
                            type: string
                    type: object
                primarySite:
                    description: SiteReference is the reference struct returned with company info
                    properties:
                        externalIds:
                            items:
                                properties:
                                    backsynced:
                                        example: false
                                        type: boolean
                                    externalId:
                                        type: string
                                    id:
                                        type: string
                                    productId:
                                        type: string
                                    productInstanceId:
                                        type: string
                                    siteId:
                                        type: string
                                type: object
                            type: array
                        friendlyName:
                            type: string
                        id:
                            type: string
                        name:
                            type: string
                        physicalAddressFlag:
                            type: boolean
                        primaryAddress:
                            description:
                                SiteAddressReference is the subset address struct to be returned
                                with site info
                            properties:
                                addressLine1:
                                    type: string
                                addressLine2:
                                    type: string
                                addressLine3:
                                    type: string
                                addressLine4:
                                    type: string
                                administrativeArea:
                                    type: string
                                billingFlag:
                                    type: boolean
                                country:
                                    type: string
                                countryCode:
                                    type: string
                                dependentLocality:
                                    type: string
                                id:
                                    type: string
                                locality:
                                    type: string
                                name:
                                    type: string
                                phoneNumberId:
                                    type: string
                                postCode:
                                    type: string
                                primaryFlag:
                                    type: boolean
                                shippingFlag:
                                    type: boolean
                                timeZone:
                                    type: string
                            type: object
                        primaryEmail:
                            description:
                                SiteEmailReference is the subset email struct to be returned with
                                site info
                            properties:
                                activeFlag:
                                    type: boolean
                                emailAddress:
                                    type: string
                                id:
                                    type: string
                                primaryFlag:
                                    type: boolean
                            type: object
                        primaryFlag:
                            type: boolean
                        primaryPhoneNumber:
                            properties:
                                activeFlag:
                                    type: boolean
                                countryCode:
                                    type: string
                                extension:
                                    type: string
                                id:
                                    type: string
                                nationalNumber:
                                    type: string
                                primaryFlag:
                                    type: boolean
                            type: object
                        primarySocialMedia:
                            description:
                                SiteSocialMediaReference is the reference struct to be returned
                                with Site info
                            properties:
                                activeFlag:
                                    type: boolean
                                id:
                                    type: string
                                link:
                                    type: string
                                primaryFlag:
                                    type: boolean
                            type: object
                        timeZone:
                            type: string
                    type: object
                updatedBy:
                    type: string
                updatedDate:
                    format: date-time
                    type: string
            type: object
        Companies:
            type: array
            items:
                $ref: "#/components/schemas/Company"
        Site:
            description: Site - structure returned in get site
            properties:
                activeFlag:
                    type: boolean
                company:
                    description:
                        CompanyAsParentReference is the reference struct returned with site
                        info
                    properties:
                        externalIds:
                            items:
                                description: >-
                                    CompanyIdMappingReference : reference struct used by company
                                    to return

                                    id mapping in additon to company data.
                                properties:
                                    companyId:
                                        type: string
                                    externalId:
                                        type: string
                                    id:
                                        type: string
                                    productId:
                                        type: string
                                    productInstanceId:
                                        type: string
                                type: object
                            type: array
                        friendlyName:
                            type: string
                        id:
                            type: string
                        name:
                            type: string
                    type: object
                createdBy:
                    type: string
                createdDate:
                    format: date-time
                    type: string
                deleteTxnId:
                    type: string
                deletedBy:
                    type: string
                deletedDate:
                    format: date-time
                    type: string
                description:
                    type: string
                externalIds:
                    items:
                        properties:
                            backsynced:
                                example: false
                                type: boolean
                            externalId:
                                type: string
                            id:
                                type: string
                            productId:
                                type: string
                            productInstanceId:
                                type: string
                            siteId:
                                type: string
                        type: object
                    type: array
                friendlyName:
                    type: string
                id:
                    type: string
                inactiveDate:
                    format: date-time
                    type: string
                industryCode:
                    type: string
                lastLockCreationDate:
                    format: date-time
                    type: string
                name:
                    type: string
                partnerId:
                    type: string
                physicalAddressFlag:
                    type: boolean
                primaryAddress:
                    description:
                        SiteAddressReference is the subset address struct to be returned
                        with site info
                    properties:
                        addressLine1:
                            type: string
                        addressLine2:
                            type: string
                        addressLine3:
                            type: string
                        addressLine4:
                            type: string
                        administrativeArea:
                            type: string
                        billingFlag:
                            type: boolean
                        country:
                            type: string
                        countryCode:
                            type: string
                        dependentLocality:
                            type: string
                        id:
                            type: string
                        locality:
                            type: string
                        name:
                            type: string
                        phoneNumberId:
                            type: string
                        postCode:
                            type: string
                        primaryFlag:
                            type: boolean
                        shippingFlag:
                            type: boolean
                        timeZone:
                            type: string
                    type: object
                primaryContact:
                    description:
                        "ContactReference : a reference struct used by other entities like
                        company, but not sub-entities"
                    properties:
                        description:
                            type: string
                        firstName:
                            type: string
                        id:
                            type: string
                        lastName:
                            type: string
                        primaryAddress:
                            description:
                                AddressReference is the subset address struct to be returned with
                                contct info
                            properties:
                                addressLine1:
                                    type: string
                                addressLine2:
                                    type: string
                                addressLine3:
                                    type: string
                                addressLine4:
                                    type: string
                                administrativeArea:
                                    type: string
                                billingFlag:
                                    type: boolean
                                country:
                                    type: string
                                countryCode:
                                    type: string
                                dependentLocality:
                                    type: string
                                description:
                                    type: string
                                id:
                                    type: string
                                locality:
                                    type: string
                                name:
                                    type: string
                                postCode:
                                    type: string
                                primaryFlag:
                                    type: boolean
                                shippingFlag:
                                    type: boolean
                                timeZone:
                                    type: string
                                type:
                                    description:
                                        Used in POST/PUT/PATCH requests to allow having the same JSON path
                                        as in GET, but to only allow setting an ID on this
                                        referenced entity, not other fields
                                    properties:
                                        id:
                                            type: string
                                    title: Allows specifying a reference by ID only.
                                    type: object
                            type: object
                        primaryEmail:
                            description: EmailReference is the struct definition of a Email
                            properties:
                                activeFlag:
                                    type: boolean
                                description:
                                    type: string
                                emailAddress:
                                    type: string
                                id:
                                    type: string
                                primaryFlag:
                                    type: boolean
                                type:
                                    description:
                                        Used in POST/PUT/PATCH requests to allow having the same JSON path
                                        as in GET, but to only allow setting an ID on this
                                        referenced entity, not other fields
                                    properties:
                                        id:
                                            type: string
                                    title: Allows specifying a reference by ID only.
                                    type: object
                            type: object
                        primaryFaxNumber:
                            description: FaxNumberReference
                            properties:
                                activeFlag:
                                    type: boolean
                                description:
                                    type: string
                                extension:
                                    type: string
                                id:
                                    type: string
                                nationalNumber:
                                    type: string
                                primaryFlag:
                                    type: boolean
                                type:
                                    description:
                                        Used in POST/PUT/PATCH requests to allow having the same JSON path
                                        as in GET, but to only allow setting an ID on this
                                        referenced entity, not other fields
                                    properties:
                                        id:
                                            type: string
                                    title: Allows specifying a reference by ID only.
                                    type: object
                            type: object
                        primaryPhoneNumber:
                            description: PhoneNumberReference
                            properties:
                                activeFlag:
                                    type: boolean
                                countryCode:
                                    type: string
                                description:
                                    type: string
                                designation:
                                    type: string
                                extension:
                                    type: string
                                id:
                                    type: string
                                nationalNumber:
                                    type: string
                                primaryFlag:
                                    type: boolean
                                type:
                                    description:
                                        Used in POST/PUT/PATCH requests to allow having the same JSON path
                                        as in GET, but to only allow setting an ID on this
                                        referenced entity, not other fields
                                    properties:
                                        id:
                                            type: string
                                    title: Allows specifying a reference by ID only.
                                    type: object
                            type: object
                        primarySocialMedia:
                            description:
                                SocialMediaReference is the reference struct to be returned with
                                contact info
                            properties:
                                activeFlag:
                                    type: boolean
                                description:
                                    type: string
                                id:
                                    type: string
                                link:
                                    type: string
                                primaryFlag:
                                    type: boolean
                                type:
                                    description:
                                        Used in POST/PUT/PATCH requests to allow having the same JSON path
                                        as in GET, but to only allow setting an ID on this
                                        referenced entity, not other fields
                                    properties:
                                        id:
                                            type: string
                                    title: Allows specifying a reference by ID only.
                                    type: object
                            type: object
                        salutation:
                            type: string
                        title:
                            type: string
                    type: object
                primaryEmail:
                    description:
                        SiteEmailReference is the subset email struct to be returned with
                        site info
                    properties:
                        activeFlag:
                            type: boolean
                        emailAddress:
                            type: string
                        id:
                            type: string
                        primaryFlag:
                            type: boolean
                    type: object
                primaryFlag:
                    type: boolean
                primaryPhoneNumber:
                    properties:
                        activeFlag:
                            type: boolean
                        countryCode:
                            type: string
                        extension:
                            type: string
                        id:
                            type: string
                        nationalNumber:
                            type: string
                        primaryFlag:
                            type: boolean
                    type: object
                primarySocialMedia:
                    description:
                        SiteSocialMediaReference is the reference struct to be returned
                        with Site info
                    properties:
                        activeFlag:
                            type: boolean
                        id:
                            type: string
                        link:
                            type: string
                        primaryFlag:
                            type: boolean
                    type: object
                subEntityUpdatedBy:
                    type: string
                subEntityUpdatedDate:
                    format: date-time
                    type: string
                timeZone:
                    type: string
                type:
                    description:
                        SiteTypeReference is the reference struct to be returned with Site
                        info
                    properties:
                        defaultFlag:
                            type: boolean
                        id:
                            type: string
                        name:
                            type: string
                    type: object
                updatedBy:
                    type: string
                updatedDate:
                    format: date-time
                    type: string
            type: object
        Sites:
            type: array
            items:
                $ref: "#/components/schemas/Site"
        SiteCreateRequest:
            description:
                SiteCreateRequest - structure for parsing and validating site
                create payload
            properties:
                activeFlag:
                    description: in:body
                    type: boolean
                description:
                    description: in:body
                    type: string
                externalIds:
                    items:
                        properties:
                            externalId:
                                description: in:body
                                type: string
                            productId:
                                description: in:body
                                type: string
                            productInstanceId:
                                description: in:body
                                type: string
                        required:
                            - productId
                            - productInstanceId
                            - externalId
                        type: object
                    type: array
                friendlyName:
                    description: in:body
                    type: string
                industryCode:
                    description: in:body
                    example: "9999"
                    type: string
                name:
                    description: in:body
                    type: string
                physicalAddressFlag:
                    description: in:body
                    type: boolean
                primaryAddress:
                    description:
                        SiteAddressCreateRequest - structure for parsing and validating
                        site address create payload
                    properties:
                        activeFlag:
                            description: in:body
                            type: boolean
                        addressLine1:
                            description: in:body
                            example: 4110 George Rd
                            type: string
                        addressLine2:
                            description: in:body
                            example: Suite 200
                            type: string
                        addressLine3:
                            description: in:body
                            type: string
                        addressLine4:
                            description: in:body
                            type: string
                        administrativeArea:
                            description: in:body
                            example: FL
                            type: string
                        billingFlag:
                            description: in:body
                            type: boolean
                        countryCode:
                            example: US
                            type: string
                        dependentLocality:
                            description: in:body
                            type: string
                        description:
                            description: in:body
                            type: string
                        externalIds:
                            items:
                                properties:
                                    externalId:
                                        type: string
                                    productId:
                                        type: string
                                    productInstanceId:
                                        type: string
                                type: object
                            type: array
                        locality:
                            description: in:body
                            example: Tampa
                            type: string
                        name:
                            description: in:body
                            type: string
                        phoneNumberId:
                            description: in:body
                            type: string
                        postCode:
                            description: in:body
                            example: "33634"
                            type: string
                        primaryFlag:
                            description: in:body
                            type: boolean
                        shippingFlag:
                            description: in:body
                            type: boolean
                        timeZone:
                            example: (UTC-05:00) Eastern Time (US & Canada)
                            type: string
                        type:
                            description:
                                Used in POST/PUT/PATCH requests to allow having the same JSON path
                                as in GET, but to only allow setting an ID on this referenced
                                entity, not other fields
                            properties:
                                id:
                                    type: string
                            title: Allows specifying a reference by ID only.
                            type: object
                    required:
                        - countryCode
                    type: object
                primaryEmail:
                    description:
                        SiteEmailCreateRequest - structure for parsing and validating site
                        email create payload
                    properties:
                        activeFlag:
                            description: in:body
                            type: boolean
                        description:
                            description: in:body
                            type: string
                        emailAddress:
                            description: in:body
                            example: no-reply@connectwise.com
                            type: string
                        primaryFlag:
                            description: in:body
                            type: boolean
                        type:
                            description:
                                Used in POST/PUT/PATCH requests to allow having the same JSON path
                                as in GET, but to only allow setting an ID on this referenced
                                entity, not other fields
                            properties:
                                id:
                                    type: string
                            title: Allows specifying a reference by ID only.
                            type: object
                    required:
                        - emailAddress
                    type: object
                primaryFlag:
                    description: in:body
                    type: boolean
                primaryPhoneNumber:
                    description:
                        SitePhoneNumberCreateRequest - structure for parsing and validating
                        site phone number create payload
                    properties:
                        activeFlag:
                            description: in:body
                            type: boolean
                        countryCode:
                            description: in:body
                            example: US
                            type: string
                        description:
                            description: in:body
                            type: string
                        extension:
                            description: in:body
                            type: string
                        externalIds:
                            items:
                                properties:
                                    externalId:
                                        description: in:body
                                        type: string
                                    productId:
                                        description: in:body
                                        type: string
                                    productInstanceId:
                                        description: in:body
                                        type: string
                                required:
                                    - productId
                                    - productInstanceId
                                    - externalId
                                type: object
                            type: array
                        nationalNumber:
                            description: in:body
                            example: "8134634700"
                            type: string
                        primaryFlag:
                            description: in:body
                            type: boolean
                        type:
                            description:
                                Used in POST/PUT/PATCH requests to allow having the same JSON path
                                as in GET, but to only allow setting an ID on this referenced
                                entity, not other fields
                            properties:
                                id:
                                    type: string
                            title: Allows specifying a reference by ID only.
                            type: object
                    required:
                        - countryCode
                        - nationalNumber
                    type: object
                primarySocialMedia:
                    description:
                        SiteSocialMediaCreateRequest - structure for parsing and validating
                        site social media create payload
                    properties:
                        activeFlag:
                            description: in:body
                            type: boolean
                        description:
                            description: in:body
                            type: string
                        link:
                            description: in:body
                            type: string
                        primaryFlag:
                            description: in:body
                            type: boolean
                        type:
                            description:
                                Used in POST/PUT/PATCH requests to allow having the same JSON path
                                as in GET, but to only allow setting an ID on this referenced
                                entity, not other fields
                            properties:
                                id:
                                    type: string
                            title: Allows specifying a reference by ID only.
                            type: object
                    required:
                        - link
                    type: object
                timeZone:
                    description: in:body
                    example: (UTC-05:00) Eastern Time (US & Canada)
                    type: string
                type:
                    description:
                        Used in POST/PUT/PATCH requests to allow having the same JSON path
                        as in GET, but to only allow setting an ID on this referenced
                        entity, not other fields
                    properties:
                        id:
                            type: string
                    title: Allows specifying a reference by ID only.
                    type: object
            required:
                - name
                - timeZone
            type: object
        CustomError:
            properties:
                error:
                    items:
                        description: CustomError contains the message about error
                        properties:
                            code:
                                type: string
                            message:
                                type: string
                        type: object
                    type: array
            type: object
        PatchOperation:
            properties:
                from:
                    type: string
                op:
                    example: replace
                    type: string
                path:
                    example: /partnerId
                    type: string
                value:
                    example: '"123"'
                    type: object
            required:
                - op
                - path
            title: Operation represent a single patch operation. See http://jsonpatch.com/
            type: object
        PatchOperations:
            type: array
            items:
                $ref: "#/components/schemas/PatchOperation"
        backupInstanceRecord:
            type: object
            properties:
                backupJobID:
                    type: string
                    description: Identifier for the backup job.
                backupJobName:
                    type: string
                    description: Name of the backup job.
                jobType:
                    type: string
                    description: Type of the backup job. E.g. Replication Job.
                managedBy:
                    type: string
                    description: Describes how the backup is managed, e.g. Appliance or Portal.
                applianceName:
                    type: string
                    description:
                        If the backup is managed by an appliance, this field will contain
                        the device name of the appliance.
                applianceID:
                    type: string
                    description:
                        If the backup is managed by an appliance, this field will contain
                        the unique identifier for the appliance.
                devices:
                    type: array
                    description:
                        This field contains details of all devices on which the job
                        instance has run.
                    items:
                        type: object
                        properties:
                            vendorDeviceID:
                                type: string
                                description: Identifier of the device on the vendor side.
                            endpointID:
                                type: string
                                description:
                                    Identifier of the device at the connectwise side. Vendors can get
                                    this id from the existing endpoint-mapping APIs.
                            instanceID:
                                type: string
                                description:
                                    Identifier for the backup job run instance. This is a unique
                                    identifier per device.
                            deviceName:
                                type: string
                                description: The hostname of the device.
                            deviceType:
                                type: string
                                description:
                                    The type of the device, this is normally the billing type. E.g.
                                    Desktop, Server, VM, etc.
                                example: Desktop
                            backupStatus:
                                type: string
                                enum:
                                    - Success
                                    - Failure
                                    - Unknown
                                    - Warning
                                    - Missed
                                    - Running
                                    - Paused
                                description:
                                    Status of the backup job run instance. Map the vendor backup status
                                    to this enum field.
                            summary:
                                type: string
                                description:
                                    This field holds the notes and information about the backup job
                                    run.
                                maxLength: 1000
                            vendorBackupStatus:
                                type: string
                                description: Status of the backup job run at the vendor end.
                            backupSize:
                                type: number
                                description:
                                    The size of the backup image taken after the job run in bytes. Send
                                    this field as 0 or choose not to send it for incomplete jobs.
                                example: 512000000
                            totalBackupSize:
                                type: number
                                description:
                                    The total size of the backup images stored for all backup job runs
                                    in bytes. It is the summation of backup image size of all
                                    previous and current runs.
                                example: 800000000
                            protectedSize:
                                type: number
                                description:
                                    The size of the user data that is protected by the job in bytes.
                                    Send this field as 0 or choose not to send it for incomplete
                                    jobs.
                                example: 1024000000
                            backupLocation:
                                type: string
                                description:
                                    The location where the backup is stored. This can be multiple
                                    locations such as Local, cloud url, etc. Send comma-separated
                                    values of location.
                            lastBackupTimestamp:
                                type: number
                                description:
                                    The end timestamp of the last backup job run instance. The
                                    timestamp must be in milliseconds. This is excluding the
                                    current run. If it is unavailable you can choose to not send
                                    it.
                                example: 1692955384000
                            nextBackupTimestamp:
                                type: number
                                description:
                                    The start timestamp of the next scheduled job. The timestamp must
                                    be in milliseconds.
                                example: 1692955384000
                            startTimestamp:
                                type: number
                                description:
                                    Timestamp when the backup job run instance started. The timestamp
                                    must be in milliseconds.
                                example: 1692955384000
                            endTimestamp:
                                type: number
                                description:
                                    Timestamp when the backup job run instance ended. The timestamp
                                    must be in milliseconds. This field needs to be sent for
                                    completed jobs. No need to send for Paused and Running jobs.
                                example: 1692955384000
                            agentVersion:
                                type: string
                                description:
                                    This is the version of the vendor agent installed in the device
                                    where the backup job has run. We need
                            recoveryPointID:
                                type: string
                                description:
                                    It is the identifier for the recovery point created after the
                                    backup is run. This can help us map dr runs with backup job
                                    runs. The recovery point id is mandatory when status is
                                    Success. It is non-mandatory for other statuses.
                        required:
                            - instanceID
                            - vendorDeviceID
                            - endpointID
                            - deviceName
                            - deviceType
                            - startTimestamp
                            - backupStatus
                            - vendorBackupStatus
                            - backupLocation
                            - agentVersion
            required:
                - backupJobID
                - backupJobName
                - jobType
                - managedBy
                - devices
        drReadinessRecord:
            type: object
            properties:
                id:
                    type: string
                    description:
                        Identifier for this dr-readiness run. This is a unique identifier
                        at the vendor end.
                triggeredBy:
                    type: string
                    description:
                        This field specifies how the dr readiness was triggered. It can be
                        Manual, Automated, etc.
                backupJobID:
                    type: string
                    description: This is the unique identifier for a job in the vendor side.
                backupName:
                    type: string
                    description: This is the name of the backup job on the vendor side.
                devices:
                    type: array
                    description:
                        This field contains details of all devices on which the job
                        instance has run.
                    items:
                        type: object
                        properties:
                            vendorDeviceID:
                                type: string
                                description: Identifier of the device on the vendor side.
                            endpointID:
                                type: string
                                description:
                                    Identifier of the device at the connectwise side. Vendors can get
                                    this id from the existing endpoint-mapping APIs.
                            instanceID:
                                type: string
                                description:
                                    Identifier for this dr-readiness run on a device. This field is
                                    used to uniquely identify a dr readiness run on a device.
                            backupInstanceID:
                                type: string
                                description:
                                    This is the unique identifier for a job run instance. This is used
                                    to identify which backup job has triggered the dr verification
                                    run.
                            recoveryPointID:
                                type: string
                                description:
                                    It is the identifier for the recovery point created after the
                                    backup is run. This can help us map dr runs with backup job
                                    runs. If there are multiple recovery points just return the
                                    recovery point of the latest job.
                            verificationImages:
                                type: array
                                description:
                                    reference images of screenshots taken after DR run. No need to send
                                    this when dr readiness job is unsuccessful if screenshot is
                                    not taken. In case of unsuccessful dr runs, if no screenshots
                                    are available, please do not send this field. `[]` or `null`
                                    will be treated as incorrect value and return 400.
                                items:
                                    type: string
                            startTimestamp:
                                type: number
                                description:
                                    Timestamp when the dr-readiness job started. The timestamp must be
                                    in milliseconds.
                                example: 1692955384000
                            endTimestamp:
                                type: number
                                description:
                                    Timestamp when the dr-readiness job finished. The timestamp must be
                                    in milliseconds. This field needs to be sent for completed
                                    jobs.
                                example: 1692955384000
                            status:
                                type: string
                                enum:
                                    - Success
                                    - Failure
                                    - Warning
                                    - Missed
                                    - Unknown
                                description:
                                    Status of the dr readiness verification run. This field is mapped
                                    with the `vendorStatus` field.
                            summary:
                                type: string
                                description:
                                    This field holds the notes and information about the dr job run.
                                    This can get us low-level information about the dr run.
                                maxLength: 1000
                            vendorStatus:
                                type: string
                                description:
                                    Status of the dr readiness verification at the vendor end. This
                                    field will be used to map the `Unknown` values in the `status`
                                    fields.
                        required:
                            - instanceID
                            - vendorDeviceID
                            - endpointID
                            - startTimestamp
                            - status
                            - summary
                            - vendorStatus
            required:
                - id
                - triggeredBy
                - devices
        alarmRecord:
            type: object
            properties:
                family:
                    type: string
                    description:
                        This is the grouping of alarms, based on the type of the alarm.
                        This field represents the condition of the alarm trigger.
                severity:
                    type: string
                    description: This is the severity of the alarm raised by the vendor.
                    enum:
                        - Critical
                        - High
                        - Medium
                        - Low
                        - Info
                type:
                    type: string
                    description: This field represents the level at which the alarm has been raised.
                    enum:
                        - Device
                        - Backup
                        - Site
                alarms:
                    type: array
                    description:
                        This field contains all the alarm details specific to an instance
                        of the alarm.
                    items:
                        type: object
                        properties:
                            vendorDeviceID:
                                type: string
                                description:
                                    Identifier of the device on the vendor side. No need to send this
                                    field for Site level alarms.
                            endpointID:
                                type: string
                                description:
                                    Identifier of the device at the connectwise side. Vendors can get
                                    this id from the existing endpoint-mapping APIs. No need to
                                    send this field for Site level alarms.
                            vendorAlarmID:
                                type: string
                                description:
                                    This field is the unique identifier of the alarm on the vendor
                                    side.
                            backupJobName:
                                type: string
                                description:
                                    This is the name of the backup job on the vendor side. This is
                                    mandatory if we are getting backupInstanceID &
                                    backupTimestamp. No need to send this for Device and Site
                                    level alarms.
                            backupJobID:
                                type: string
                                description:
                                    Identifier for the backup job on the vendor side. This is mandatory
                                    if we are getting backupInstanceID & backupTimestamp. No need
                                    to send this for Device and Site level alarms.
                            backupTimestamp:
                                type: number
                                description:
                                    Timestamp of the backup job run instance. This is mandatory if we
                                    are getting backupJobName & backupInstanceID. The timestamp
                                    must be in milliseconds. No need to send this for Device and
                                    Site level alarms.
                                example: 1692955384000
                            backupInstanceID:
                                type: string
                                description:
                                    This is the unique identifier for a job run instance. This is used
                                    to identify which backup job has raised this alarm. This is
                                    mandatory if we are getting backupJobName & backupTimestamp.
                                    No need to send this for Device and Site level alarms.
                            name:
                                type: string
                                description:
                                    Name of the alarm. This is a human-readable format for describing
                                    alarm summaries.
                            description:
                                type: string
                                description: Full description of the alarm.
                            timestamp:
                                type: number
                                description:
                                    Time when the alarm was created. The timestamp must be in
                                    milliseconds.
                                example: 1692955384000
                        required:
                            - vendorAlarmID
                            - name
                            - description
                            - timestamp
            required:
                - family
                - severity
                - type
                - alarms
        endpointList:
            type: object
            properties:
                endpoints:
                    type: array
                    items:
                        $ref: "#/components/schemas/endpoint"
        endpoint:
            type: object
            properties:
                clientId:
                    type: string
                    description: Client id
                siteId:
                    type: string
                    description: Site id
                endpointId:
                    type: string
                    description: Endpoint id
                regId:
                    type: string
                    description: reg id
                endpointType:
                    type: string
                    description: Endpoint Type
                osType:
                    type: string
                    description: OS type
        ServiceList:
            type: object
            properties:
                services:
                    type: array
                    items:
                        $ref: "#/components/schemas/Services"
        Services:
            type: object
            properties:
                ServiceName:
                    type: string
                    description: ServiceName
                DisplayName:
                    type: string
                    description: DisplayName
        Categories:
            type: array
            items:
                $ref: "#/components/schemas/Category"
        Category:
            type: object
            required:
                - name
            properties:
                createdAt:
                    type: string
                    format: date-time
                createdBy:
                    type: string
                id:
                    type: string
                    format: uuid
                name:
                    type: string
                updatedAt:
                    type: string
                    format: date-time
                updatedBy:
                    type: string
        Id:
            type: object
            required:
                - id
            properties:
                id:
                    type: string
                    format: uuid
        IdWithName:
            type: object
            properties:
                id:
                    type: string
                    format: uuid
                name:
                    type: string
        PaginatedTickets:
            type: object
            properties:
                tickets:
                    type: array
                    items:
                        $ref: "#/components/schemas/Ticket"
                totalCount:
                    type: integer
        Priorities:
            type: array
            items:
                $ref: "#/components/schemas/Priority"
        Priority:
            type: object
            required:
                - name
            properties:
                createdAt:
                    type: string
                    format: date-time
                createdBy:
                    type: string
                id:
                    type: string
                    format: uuid
                name:
                    type: string
                updatedAt:
                    type: string
                    format: date-time
                updatedBy:
                    type: string
        ServiceBoard:
            type: object
            required:
                - name
                - defaultPriority
            properties:
                createdAt:
                    type: string
                    format: date-time
                createdBy:
                    type: string
                defaultPriority:
                    $ref: "#/components/schemas/IdWithName"
                description:
                    type: string
                    maxLength: 280
                id:
                    type: string
                    format: uuid
                inactiveFlag:
                    type: boolean
                name:
                    type: string
                    minLength: 1
                    maxLength: 50
                updatedAt:
                    type: string
                    format: date-time
                updatedBy:
                    type: string
        ServiceBoardTeam:
            type: object
            required:
                - teamId
            properties:
                createdAt:
                    type: string
                    format: date-time
                createdBy:
                    type: string
                id:
                    type: string
                    format: uuid
                serviceBoardId:
                    type: string
                    format: uuid
                teamId:
                    type: string
                    format: uuid
                teamName:
                    type: string
                updatedAt:
                    type: string
                    format: date-time
                updatedBy:
                    type: string
        ServiceBoardTeams:
            type: array
            items:
                $ref: "#/components/schemas/ServiceBoardTeam"
        ServiceBoards:
            type: array
            items:
                $ref: "#/components/schemas/ServiceBoard"
        Source:
            type: object
            required:
                - name
            properties:
                createdAt:
                    type: string
                    format: date-time
                createdBy:
                    type: string
                id:
                    type: string
                    format: uuid
                name:
                    type: string
                updatedAt:
                    type: string
                    format: date-time
                updatedBy:
                    type: string
        Sources:
            type: array
            items:
                $ref: "#/components/schemas/Source"
        Status:
            type: object
            required:
                - name
                - category
                - slaStatus
            properties:
                category:
                    type: string
                    enum:
                        - New
                        - InProgress
                        - Closed
                createdAt:
                    type: string
                    format: date-time
                createdBy:
                    type: string
                id:
                    type: string
                    format: uuid
                inactiveFlag:
                    type: boolean
                name:
                    type: string
                    minLength: 1
                    maxLength: 50
                slaStatus:
                    type: string
                    enum:
                        - NotResponded
                        - Responded
                        - PlanCreated
                        - Resolved
                        - Waiting
                updatedAt:
                    type: string
                    format: date-time
                updatedBy:
                    type: string
        Statuses:
            type: array
            items:
                $ref: "#/components/schemas/Status"
        Tag:
            type: object
            required:
                - name
            properties:
                createdAt:
                    type: string
                    format: date-time
                createdBy:
                    type: string
                id:
                    type: string
                    format: uuid
                inactiveFlag:
                    type: boolean
                name:
                    type: string
                    minLength: 1
                    maxLength: 50
                updatedAt:
                    type: string
                    format: date-time
                updatedBy:
                    type: string
        Tags:
            type: array
            items:
                $ref: "#/components/schemas/Tag"
        Ticket:
            type: object
            required:
                - summary
                - description
                - serviceBoard
                - source
            properties:
                assets:
                    type: array
                    description: The array of asset ids which are associated with this ticket.
                    items:
                        type: object
                        properties:
                            id:
                                type: string
                                format: uuid
                assignee:
                    $ref: "#/components/schemas/Id"
                assigneeTeam:
                    $ref: "#/components/schemas/IdWithName"
                category:
                    $ref: "#/components/schemas/IdWithName"
                company:
                    $ref: "#/components/schemas/Id"
                createdAt:
                    type: string
                    format: date-time
                    description: Read-only field. The UTC timestamp when the ticket is created.
                createdBy:
                    $ref: "#/components/schemas/Id"
                description:
                    type: string
                    description: The description of the ticket.
                    minLength: 1
                    maxLength: 10000
                dueDate:
                    type: string
                    format: mm/dd/yyyy
                    description: The due date of the ticket as stored in system.
                extendedAttributes:
                    type: array
                    items:
                        $ref: "#/components/schemas/TicketingExtendedAttribute"
                id:
                    type: string
                    format: uuid
                    description:
                        Read-only field. This is auto-generated universally unique
                        identifier (UUID) of the ticket
                nocTicketId:
                    type: string
                    description: Read-only field. The id of the ticket in NOCBO database.
                number:
                    type: string
                    description: Read-only field. This is auto-generated number of the ticket.
                priority:
                    $ref: "#/components/schemas/IdWithName"
                serviceBoard:
                    $ref: "#/components/schemas/IdWithName"
                site:
                    $ref: "#/components/schemas/Id"
                source:
                    $ref: "#/components/schemas/IdWithName"
                status:
                    $ref: "#/components/schemas/IdWithName"
                summary:
                    type: string
                    description: The mandatory free-text summary of the ticket.
                    minLength: 1
                    maxLength: 255
                tags:
                    type: array
                    items:
                        $ref: "#/components/schemas/IdWithName"
                type:
                    $ref: "#/components/schemas/IdWithName"
                updatedAt:
                    type: string
                    format: date-time
                    description: Read-only field. The UTC timestamp when the ticket is last updated.
                updatedBy:
                    $ref: "#/components/schemas/Id"
                version:
                    type: integer
                    description: |
                        Read-only field.
                        The monotonically increasing version number of ticket.
                        It is set to 1 on creation and is incremented for every update.
        TicketAPIError:
            type: object
            required:
                - code
                - message
            properties:
                code:
                    type: string
                    description: The unique code identifying this error.
                message:
                    type: string
                    description: the user friendly message for this error.
        TicketAPIErrors:
            type: array
            items:
                $ref: "#/components/schemas/TicketAPIError"
        TicketCount:
            type: object
            properties:
                category:
                    type: string
                    description:
                        This identifies the category of group of tickets for which the
                        count is returned. E.g. category could be status, priority, etc.
                        which means tickets are grouped by status, priority, etc.
                        respectively.
                count:
                    type: integer
                name:
                    type: string
                    description:
                        This is the actual group name i.e. if category is status, then this
                        attribute would identify actual status name for which count is
                        returned.
        TicketCounts:
            type: array
            items:
                $ref: "#/components/schemas/TicketCount"
        TicketNote:
            allOf:
                - $ref: "#/components/schemas/TicketNoteRequest"
                - type: object
                  properties:
                      createdAt:
                          type: string
                          format: date-time
                      createdBy:
                          type: string
                      createdById:
                          type: string
                      extendedAttributes:
                          type: array
                          items:
                              $ref: "#/components/schemas/TicketingExtendedAttribute"
                      id:
                          type: string
                          format: uuid
                      selfCreated:
                          type: boolean
                      ticketId:
                          type: string
                          format: uuid
                      updatedAt:
                          type: string
                          format: date-time
                      updatedBy:
                          type: string
                      updatedById:
                          type: string
        TicketNoteRequest:
            type: object
            required:
                - detail
                - visibility
            properties:
                detail:
                    type: string
                    minLength: 1
                    maxLength: 12000
                extendedAttributes:
                    type: array
                    items:
                        $ref: "#/components/schemas/TicketingExtendedAttribute"
                visibility:
                    type: integer
                    description: |
                        Visibility of the note:
                         * 1 - Visible to all
                         * 2 - Visible to a specific partner
                         * 7 - Expert services,visible to partner and expert service users
                         * 8 - Expert users,visible to expert users
                    enum:
                        - 1
                        - 2
                        - 7
                        - 8
        TicketNotes:
            type: array
            items:
                $ref: "#/components/schemas/TicketNote"
        TicketingExtendedAttribute:
            type: object
            properties:
                id:
                    type: string
                    format: uuid
                name:
                    type: string
                value:
                    oneOf:
                        - type: string
                        - type: boolean
                        - type: integer
                        - type: string
                          format: date-time
        Type:
            type: object
            required:
                - name
            properties:
                createdAt:
                    type: string
                    format: date-time
                createdBy:
                    type: string
                id:
                    type: string
                    format: uuid
                name:
                    type: string
                updatedAt:
                    type: string
                    format: date-time
                updatedBy:
                    type: string
        Types:
            type: array
            items:
                $ref: "#/components/schemas/Type"
        json-patch:
            type: array
            description: JSON schema for JSONPatch files
            items:
                $ref: "#/components/schemas/patch-document"
        patch-document:
            type: object
            description: A JSONPatch document as defined by RFC 6902
            required:
                - op
                - path
                - value
            properties:
                op:
                    type: string
                    description: The operation to be performed
                    enum:
                        - replace
                path:
                    type: string
                    description: A JSON-Pointer
                value:
                    type: object
                    description: The value to be used within the operations.
        PartnerAttributeDefinition:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier for the attribute definition
                name:
                    type: string
                    description: Name of the attribute
                description:
                    type: string
                    description: Description of the attribute
                type:
                    type: string
                    description: Type of the attribute (e.g., string, number, boolean)
                required:
                    type: boolean
                    description: Whether the attribute is required
                defaultValue:
                    type: string
                    description: Default value of the attribute
                options:
                    type: array
                    items:
                        type: string
                    description: List of possible values for the attribute if it is of type "enum"
                validation:
                    type: object
                    description: Validation rules for the attribute
                    properties:
                        minLength:
                            type: integer
                            description: Minimum length for the attribute value
                        maxLength:
                            type: integer
                            description: Maximum length for the attribute value
                        pattern:
                            type: string
                            description: Regular expression pattern for the attribute value
        AttributeValue:
            type: object
            properties:
                attributeID:
                    type: string
                    description: Unique identifier for the attribute
                value:
                    type: string
                    description: Value of the attribute
        PatchDetails:
            type: object
            properties:
                summary:
                    description: Endpoint patches summary data
                    type: object
                    properties:
                        assessedAt:
                            type: string
                            format: date-time
                        missingCount:
                            description: Total count of policy match missing patches
                            type: integer
                        pendingRebootCount:
                            description: Total count of policy match reboot pending patches
                            type: integer
                        installedCount:
                            description: Total count of policy match installed patches
                            type: integer
                        compliance:
                            description: Policy based patches (excluding optional) compliance score
                            type: number
                        outOfSupport:
                            description: Out of support status
                            type: boolean
                        deploymentStatus:
                            description: if deployed already or not
                            type: boolean
                        policyName:
                            type: string
                patches:
                    description: Array of endpoint patches
                    type: array
                    items:
                        $ref: "#/components/schemas/PatchDetail"
        PatchDetail:
            type: object
            properties:
                updateID:
                    type: string
                    format: uuid
                kbArticleID:
                    type: string
                status:
                    type: integer
                classification:
                    type: string
                rebootBehavior:
                    type: string
                msrcID:
                    type: string
                msrcSeverity:
                    type: string
                nocTestingStatus:
                    type: string
                partnerApprovalStatus:
                    type: string
                size:
                    type: string
                moreInformationLink:
                    type: string
                policyMatch:
                    type: boolean
                installedBy:
                    type: string
                installedDate:
                    type: string
                    format: date-time
        ErrorMessage:
            type: object
            properties:
                error:
                    type: object
                    properties:
                        message:
                            description: Error message
                            type: string
        SystemStateCollection:
            type: object
            properties:
                createTimeUTC:
                    type: string
                    format: date-time
                    description: CreateTimeUTC of agent
                name:
                    type: string
                    description: Name
                type:
                    type: string
                    description: Collection of all systemstate information
                endpointID:
                    type: string
                    format: uuid
                    description: Endpoint ID of the managed endpoint resource
                clientID:
                    type: string
                    description: Client ID or company
                siteID:
                    type: string
                    description: Site ID
                startupStatus:
                    $ref: "#/components/schemas/SystemStateStartupStatus"
                lastLoggedOnUser:
                    $ref: "#/components/schemas/SystemStateLastLoggedOnUser"
                loggedOnUsers:
                    type: array
                    items:
                        $ref: "#/components/schemas/SystemStateLoggedOnUsers"
                    description: Logged on users information
        SystemStateStartupStatus:
            type: object
            properties:
                lastBootUpTimeUTC:
                    type: string
                    format: date-time
                    description: Last bootup time of operating system
        SystemStateLastLoggedOnUser:
            type: object
            properties:
                username:
                    type: string
                    description: User name of lastLoggedOnUser
                logonTime:
                    type: string
                    format: date-time
                    description: Logon time of lastLoggedOnUser
                status:
                    type: string
                    description: Status of a lastLoggedOnUser
                isAdmin:
                    type: boolean
                    description: lastLoggedOnUser is admin or not
        SystemStateLoggedOnUsers:
            type: object
            properties:
                username:
                    type: string
                    description: User name
                isAdmin:
                    type: boolean
                    description: loggedOnUsers is admin or not
                sessionID:
                    type: string
                    description: Session Id of a logon user
                sessionName:
                    type: string
                    description: Session name of a logon user
                status:
                    type: string
                    description: Status of a logon user
                client:
                    type: string
                    description: Client name or ip address for remote logon
                logonTime:
                    type: string
                    format: date-time
                    description: Logon time of loggedOn User
        UsageUpload:
            properties:
                sku_id:
                    type: string
                    minLength: 1
                    title: Sku Id
                sku_name:
                    type: string
                    minLength: 1
                    title: Sku Name
                sku_category:
                    type: string
                    minLength: 1
                    title: Sku Category
                sku_sub_category:
                    type: string
                    title: Sku Sub Category
                product_family:
                    type: string
                    title: Product Family
                    description: Product family
                unit_price:
                    type: number
                    title: Unit Price
                    default: 0
                total:
                    type: number
                    title: Total
                    default: 0
                unit_of_measure:
                    type: string
                    title: Unit Of Measure
                free_quantity:
                    type: number
                    title: Free Quantity
                    default: 0
                quantity_charged:
                    type: number
                    title: Quantity Charged
                    default: 0
                quantity:
                    type: number
                    title: Quantity
                third_party_product_site_id:
                    type: string
                    title: Third Party Product Site Id
                third_party_product_site_name:
                    type: string
                    title: Third Party Product Site Name
                company_id:
                    type: string
                    title: Company Id
                company_name:
                    type: string
                    title: Company Name
                currency:
                    type: string
                    title: Currency
                region:
                    type: string
                    title: Region
                usage_month:
                    type: string
                    title: Usage Month
                    description: Usage month - 2023-04
                usage_start_date:
                    type: string
                    title: Usage Start Date
                usage_end_date:
                    type: string
                    title: Usage End Date
            type: object
            required:
                - sku_id
                - sku_name
                - sku_category
                - quantity
                - usage_month
                - third_party_product_site_id
                - third_party_product_site_name
                - company_id
                - company_name
            title: Product usage
        UsageCreate:
            properties:
                status:
                    type: string
                    title: Status
        BillingAPIError:
            type: object
            required:
                - error
            properties:
                error:
                    type: string
                    description: Message explaining about the error reason
        DeviceGroupWithRootBlockInVersionedPayload:
            title: DeviceGroup Payload
            type: object
            properties:
                createdAt:
                    type: string
                    format: date-time
                description:
                    type: string
                id:
                    type: string
                    format: uuid
                name:
                    type: string
                predefined:
                    type: boolean
                static:
                    type: boolean
                updatedAt:
                    type: string
                    format: date-time
            x-go-package: gitlab.connectwisedev.com/platform/platform-dynamicgroup-service/src/apidocs
        Message:
            title: Message contains the message to send as a response.
            type: object
            properties:
                id:
                    type: string
                message:
                    type: string
        TemplateMetaData:
            description: Shell scripts payload
            type: object
            properties:
                Templates:
                    type: array
                    items:
                        $ref: "#/components/schemas/ShellTemplateMetaData"
                count:
                    type: integer
        ShellTemplateMetaData:
            description: Shell Scripts list
            type: object
            properties:
                templateId:
                    type: string
                    format: uuid
                categories:
                    type: array
                    items:
                        type: string
                description:
                    type: string
                executorEngine:
                    type: string
                expectedExecutionTimeSec:
                    type: integer
                name:
                    type: string
                jsonSchema:
                    type: string
                operatingSystem:
                    type: object
                    properties:
                        string:
                            type: array
                            items:
                                type: string
                    format: map[string][]string
                hasParameters:
                    type: boolean
                state:
                    type: string
                createdOn:
                    type: string
                    format: dateTime
                updatedOn:
                    type: string
                    format: dateTime
        ErrorShellScripts:
            type: object
            description:
                Error response object will be sent from all the Rest endpoint in
                case of any failure or error
            properties:
                message:
                    type: string
                code:
                    type: string
        Scripts:
            description: List of Scripts
            type: array
            items:
                $ref: "#/components/schemas/ScriptMetadata"
        ScriptMetadata:
            description: Script Metadata model for the API
            type: object
            properties:
                id:
                    type: string
                    description: ID of the script
                    format: uuid
                    readOnly: true
                name:
                    type: string
                    description: Name of the script
                description:
                    type: string
                    description: Description of the script
                scriptCategory:
                    type: string
                    description: Category of the script
                updatedAt:
                    type: string
                    description: Date-time the script was last updated
                    format: date-time
                    readOnly: true
                createdAt:
                    type: string
                    description: Date-time the script was created
                    format: date-time
                    readOnly: true
                hasParameters:
                    type: boolean
                    description: Does script has parameters
        ErrorScripts:
            type: object
            description:
                Error response object will be sent from all the Rest endpoint in
                case of any failure or error
            properties:
                message:
                    type: string
                code:
                    type: string
        TaskDefinitionDetails:
            type: object
            properties:
                name:
                    type: string
                description:
                    type: string
                type:
                    type: string
                    enum:
                        - script
                categories:
                    type: array
                    items:
                        type: string
                createdAt:
                    type: string
                    format: dateTime
                updatedAt:
                    type: string
                    format: dateTime
                userParameters:
                    type: string
                    format: json
                JSONSchema:
                    type: string
                    format: json
                operatingSystem:
                    type: object
                    properties:
                        string:
                            type: array
                            items:
                                type: string
                    format: map[string][]string
                    example:
                        windows:
                            - "7"
                            - "10"
                executorEngine:
                    type: string
                    example: ACTIONS
        ErrorInvalidTasks:
            type: string
            description:
                Error response message will be sent from all the Rest endpoint in
                case of any failure or error
            example: bearer token is missing, expired or invalid
        ErrorForbiddenTasks:
            type: string
            description:
                Error response message will be sent from all the Rest endpoint in
                case of any failure or error
            example: access is forbidden
        ErrorTasks:
            type: object
            description:
                Error response object will be sent from all the Rest endpoint in
                case of any failure or error
            properties:
                message:
                    type: string
                    example: Error Message
                code:
                    type: string
                    example: Error Code
        SchemaLookupDef:
            type: object
            properties:
                id:
                    type: string
                    format: uuid
                reverse:
                    type: boolean
        LookupCriteria:
            type: object
            properties:
                sourceAttributes:
                    type: object
                    additionalProperties: true
                targetAttributesRequest:
                    type: array
                    items:
                        type: string
        LookupResponse:
            type: object
            properties:
                completeMatch:
                    type: boolean
                matchedSchemaIds:
                    type: array
                    items:
                        type: string
                        format: uuid
                matchedAttributes:
                    type: object
                    additionalProperties: true
        LookupRequest:
            type: object
            properties:
                schemas:
                    type: array
                    items:
                        $ref: "#/components/schemas/SchemaLookupDef"
                criteria:
                    $ref: "#/components/schemas/LookupCriteria"
        EffectivePolicy:
            title: EffectivePolicy is model for effective policy.
            type: object
            properties:
                createdAt:
                    type: string
                    format: date-time
                mapping:
                    type: object
                    additionalProperties:
                        type: object
                        additionalProperties:
                            $ref: "#/components/schemas/SettingMappingLink"
                settings:
                    $ref: "#/components/schemas/settings"
                updatedAt:
                    type: string
                    format: date-time
        SettingMappingLink:
            title: SettingMappingLink is model for mapping item.
            type: object
            properties:
                container:
                    $ref: "#/components/schemas/container"
                package:
                    $ref: "#/components/schemas/package"
                policy:
                    $ref: "#/components/schemas/policy"
                policyGroup:
                    $ref: "#/components/schemas/PolicyGroup"
                user:
                    $ref: "#/components/schemas/SettingMappingUser"
        container:
            title: Container is identifier of a container.
            type: object
            properties:
                clientID:
                    type: string
                endpointID:
                    type: string
                policyGroupID:
                    type: string
                siteID:
                    type: string
        policy:
            title: Policy is ID, type and name for policy.
            type: object
            properties:
                categoryID:
                    type: string
                createdAt:
                    type: string
                    format: date-time
                createdBy:
                    type: string
                id:
                    type: string
                name:
                    type: string
                settings:
                    $ref: "#/components/schemas/settings"
                subcategoryID:
                    type: string
                type:
                    type: string
                updatedAt:
                    type: string
                    format: date-time
                updatedBy:
                    type: string
        settings:
            type: object
            title: Settings maps domain id to domain settings.
            additionalProperties:
                $ref: "#/components/schemas/domainSettings"
        domainSettings:
            type: object
            title: DomainSettings maps setting id to setting value/definition.
            additionalProperties:
                type: object
        package:
            type: object
            title: Package is model for package.
            properties:
                assignments:
                    type: array
                    items:
                        $ref: "#/components/schemas/assignment"
                createdAt:
                    type: string
                    format: date-time
                createdBy:
                    type: string
                id:
                    type: string
                is_default:
                    type: boolean
                name:
                    type: string
                policies:
                    type: array
                    items:
                        type: string
                updatedAt:
                    type: string
                    format: date-time
                updatedBy:
                    type: string
        assignment:
            type: object
            title: Assignment identifies a container.
            properties:
                clientID:
                    type: string
                    x-cw-id-mapping:
                        entityType: company
                        context: platform
                createdAt:
                    type: string
                    format: date-time
                createdBy:
                    type: string
                endpointID:
                    type: string
                    x-cw-id-mapping:
                        entityType: endpoint
                        context: private
                policyGroupID:
                    type: string
                siteID:
                    type: string
                    x-cw-id-mapping:
                        entityType: site
                        context: platform
                updatedAt:
                    type: string
                    format: date-time
                updatedBy:
                    type: string
        PolicyGroup:
            title: PolicyGroup is model for policy group.
            type: object
            properties:
                children:
                    type: array
                    items:
                        type: object
                createdAt:
                    type: string
                    format: date-time
                createdBy:
                    type: string
                criteria:
                    $ref: "#/components/schemas/VersionedPayload"
                description:
                    type: string
                deviceGroupID:
                    type: string
                id:
                    type: string
                mergedCriteria:
                    $ref: "#/components/schemas/VersionedPayload"
                name:
                    type: string
                ordinal:
                    type: integer
                    format: int64
                parentID:
                    type: string
                parentName:
                    type: string
                policyID:
                    type: string
                subcategoryID:
                    type: string
                updatedAt:
                    type: string
                    format: date-time
                updatedBy:
                    type: string
        SettingMappingUser:
            title: SettingMappingUser is model for the user assigned info.
            type: object
            properties:
                id:
                    type: string
        VersionedPayload:
            title: VersionedPayload represents a generic payload with version.
            type: object
            properties:
                payload:
                    type: object
                    properties: {}
                version:
                    $ref: "#/components/schemas/PayloadVersion"
        PayloadVersion:
            title: PayloadVersion represents the version of payload.
            type: string
        OverrideGetBody:
            type: object
            title: OverrideGetBody is model for GET effective policy override response.
            properties:
                createdAt:
                    type: string
                    format: date-time
                createdBy:
                    type: string
                settings:
                    $ref: "#/components/schemas/Settings"
                updatedAt:
                    type: string
                    format: date-time
                updatedBy:
                    type: string
        Settings:
            type: object
            title: Settings maps domain id to domain settings.
            additionalProperties:
                type: object
        DefinitionCategoriesGetBody:
            type: object
            title:
                DefinitionCategoriesGetBody is categories with the subcategories
                transport model.
            properties:
                categories:
                    type: array
                    items:
                        $ref: "#/components/schemas/DefinitionCategoryTreeGetBody"
        DefinitionCategoryTreeGetBody:
            type: object
            title: DefinitionCategoryTreeGetBody is a category with included subcategories.
            properties:
                icon:
                    type: string
                id:
                    type: string
                label:
                    type: string
                subcategories:
                    type: array
                    items:
                        $ref: "#/components/schemas/Subcategory"
        Subcategory:
            type: object
            title: Subcategory is policy/setting subcategory model.
            properties:
                id:
                    type: string
                label:
                    type: string
        errorResponse:
            type: object
            title: ErrorResponse describes policy API error model.
            properties:
                message:
                    type: string
                payload:
                    type: object
                type:
                    $ref: "#/components/schemas/errorType"
        errorType:
            type: string
            title: ErrorType describes policy API error type.
        guestinventory:
            type: object
            properties:
                createTimeUTC:
                    type: string
                    description: Time when inventory data was collected
                    format: date-time
                endpointId:
                    type: string
                    description: EndpointId of Host
                    x-cw-id-mapping:
                        entityType: endpoint
                        context: private
                guests:
                    type: array
                    items:
                        $ref: "#/components/schemas/guest"
        guest:
            type: object
            properties:
                instanceId:
                    type: string
                    description: Id of guest
                partnerId:
                    type: string
                    description: Partner Id of the Agent if installed on guest machine
                clientId:
                    type: string
                    description: Client Id of the Agent if installed on guest machine
                    x-cw-id-mapping:
                        entityType: company
                        context: platform
                siteId:
                    type: string
                    description: Site Id of the Agent if installed on guest machine
                    x-cw-id-mapping:
                        entityType: site
                        context: platform
                endpointId:
                    type: string
                    description: Endpoint Id of the Agent if installed on guest machine
                    x-cw-id-mapping:
                        entityType: endpoint
                        context: private
                guestName:
                    type: string
                    description: Name of guest machine
                machineName:
                    type: string
                    description: MachineName is the system name
                friendlyName:
                    type: string
                    description: Friendly name of the machine
                vmState:
                    type: string
                    description: State of guest
                vmStatus:
                    type: string
                    description: Status of guest
                morefId:
                    type: string
                    description: Managed Object Reference Id for VMWare
                os:
                    $ref: "#/components/schemas/guestOS"
                vmGeneration:
                    type: string
                    description: Generation of guest
                dependentToolsInstalled:
                    type: string
                    description:
                        Dependentent tools installed or not, In order to get some extra
                        information
                dependentToolsRunning:
                    type: string
                    description:
                        Dependentent service is running or not, In order to get some extra
                        information
                vmpath:
                    type: string
                    description: Path for vm
                networks:
                    type: array
                    description: Network Details of guest
                    items:
                        $ref: "#/components/schemas/guestNetwork"
                memory:
                    $ref: "#/components/schemas/guestMemory"
                disks:
                    $ref: "#/components/schemas/guestDisk"
                replications:
                    $ref: "#/components/schemas/guestReplication"
                datastores:
                    type: array
                    description: Datastore is the guest/host storage information
                    items:
                        $ref: "#/components/schemas/datastore"
                snapshots:
                    type: array
                    items:
                        $ref: "#/components/schemas/guestSnapshot"
                numberOfvCPU:
                    type: integer
                    description: Number of Virtual CPUs
                vmUptimeSeconds:
                    type: integer
                    description: Time since the machine was last turned on, reset, or restored
                    format: int64
                integrationServices:
                    type: array
                    description: Integration Service Details of guest
                    items:
                        $ref: "#/components/schemas/guestService"
        guestNetwork:
            type: object
            properties:
                macAddress:
                    type: string
                    description: MAC Address of guest
                ipv4:
                    type: array
                    description:
                        Array of all of the IPv4 addresses associated with the current
                        network adapter.
                    items:
                        type: string
                ipv6:
                    type: array
                    description:
                        Array of all of the IPv6 addresses associated with the current
                        network adapter.
                    items:
                        type: string
                ipEnabled:
                    type: boolean
                    description: If TRUE, TCP/IP is bound and enabled on this network adapter.
                portgroup:
                    type: string
                    description:
                        Name of the virtual switch portgroup or dvPort connected to this
                        adapter
                vlanID:
                    type: integer
                    description: Vlan id
                    format: int64
                vswitchName:
                    type: string
                    description: Name of the virtual switch to which this network adapter is connected
        guestMemory:
            type: object
            properties:
                allocatedBytes:
                    type: integer
                    description: Allocated Memory to guest
                    format: int64
                startupBytes:
                    type: integer
                    description: Startup Memory of guest
                    format: int64
                minimumBytes:
                    type: integer
                    description: Minimum Memory of guest
                    format: int64
                maximumBytes:
                    type: integer
                    description: Maximum Memory of guest
                    format: int64
                memoryType:
                    type: string
                    description: Guest has which type of memory
        guestOS:
            type: object
            properties:
                name:
                    type: string
                    description: Name of the OS of guest
                version:
                    type: string
                    description: Version of the OS
                buildNumber:
                    type: string
                    description: Build number of the OS of guest
                releaseID:
                    type: string
                    description: Release id of the Operating System
        guestDisk:
            type: array
            items:
                type: object
                properties:
                    diskPath:
                        type: string
                        description: Disk path of the guest
                    capacityInBytes:
                        type: integer
                        description: Capacity of disk
                        format: int64
                    consumptionInBytes:
                        type: integer
                        description: Consumption of disk
                        format: int64
        guestService:
            type: object
            properties:
                name:
                    type: string
                    description: Integration Service Name of the guest
                state:
                    type: boolean
                    description: Integration Service state
        guestReplication:
            type: array
            items:
                type: object
                properties:
                    state:
                        type: string
                        description: State of replication
                    health:
                        type: string
                        description: Health of replication
                    mode:
                        type: string
                        description: Mode of replication
                    lastReplicationTimeUTC:
                        type: string
                        description: Last replication time
                        format: date-time
                    frequencyInSec:
                        type: integer
                        description: Frequency of replication
                        format: int32
                    primaryServer:
                        type: string
                        description: Primary server of replication
                    replicaServer:
                        type: string
                        description: Replica server of replication
                    authenticationType:
                        type: string
                        description: Authentication type of replication
                    port:
                        type: string
                        description: Port of replication
                    relationshipType:
                        type: string
                        description: Relation type of replication
        guestSnapshot:
            type: object
            properties:
                name:
                    type: string
                    description: name of the snapshot
                description:
                    type: string
                    description: description of snapshot
                id:
                    type: string
                    description:
                        id is unique identifier that distinguishes this snapshot from other
                        snapshots of the virtual machine.
                createTime:
                    type: string
                    description: date and time the snapshot was taken.
                    format: date-time
                childSnapshots:
                    type: array
                    description: snapshot of a virtual machine taken after the parent snapshot
                    items:
                        type: object
                state:
                    type: string
                    description:
                        indicates the power state of the virtual machine when this snapshot
                        was taken
                quiesced:
                    type: boolean
                    description:
                        Quiesced indicates whether the virtual computer is into a state
                        suitable for backups,Quiescing a file system is a process of
                        bringing the on-disk data of a physical or virtual computer into a
                        state suitable for backups
                replaySupported:
                    type: boolean
                    description:
                        ReplaySupported indicates whether it is allowed to run a program in
                        a virtual machine under Workstation,record the entire execution of
                        the program, including all of itsinput and output, and later repeat
                        (or"replay") the entire  execution.
        datastore:
            type: object
            properties:
                guid:
                    type: string
                    description: Datastore GUID
                name:
                    type: string
                    description: Datastore name
                capacityInBytes:
                    type: integer
                    description: Datastore capacity in bytes
                    format: int64
                committedBytes:
                    type: integer
                    description: Datastore committedBytes in bytes
                    format: int64
                uncommittedBytes:
                    type: integer
                    description: Datastore uncommittedBytes in bytes
                    format: int64
                multipleHostAccess:
                    type: boolean
                    description: Indicates if more than one host in the datacenter has been configured
                type:
                    type: string
                    description: Datastore type
                luns:
                    type: array
                    description: Part of a configured set of disks
                    items:
                        $ref: "#/components/schemas/lun"
        lun:
            type: object
            properties:
                diskName:
                    type: string
                    description: Name of disk
                noOfPartition:
                    type: integer
                    description: Disk partitions
        errorHosts:
            type: object
            properties:
                error:
                    type: object
                    properties:
                        code:
                            type: string
                        description:
                            type: string
        monitorResponse:
            type: array
            items:
                $ref: "#/components/schemas/monitorHosts"
        monitorHosts:
            type: object
            properties:
                partnerId:
                    type: string
                clientId:
                    type: string
                    description: Client id
                    x-cw-id-mapping:
                        entityType: company
                        context: platform
                siteId:
                    type: string
                    description: Site id
                    x-cw-id-mapping:
                        entityType: site
                        context: platform
                userId:
                    type: string
                endpointId:
                    type: string
                    description: Endpoint id
                    x-cw-id-mapping:
                        entityType: endpoint
                        context: private
                createdAt:
                    type: string
                probeEndpointId:
                    type: string
                    description: probeEndpoint id
                    x-cw-id-mapping:
                        entityType: endpoint
                        context: private
                ipAddress:
                    type: string
                    description: IP Address of VCenter / ESXi hosts
                type:
                    type: string
                    description: Adding VMware Hosts using Vcenter / ESXi
                    enum:
                        - ESXi
                        - VCenter
                thirdPartyId:
                    type: string
                    description: Third party id
                hosts:
                    type: array
                    description: Monitoring hosts
                    items:
                        $ref: "#/components/schemas/monitorHostDetails"
        monitorHostDetails:
            type: object
            properties:
                name:
                    type: string
                    description: Monitoring hosts name
                hostIp:
                    type: string
                    description: Monitoring hosts IPAddress
                uuid:
                    type: string
                    description: Monitoring hosts unique uuid
                hostRegId:
                    type: string
                    description: Monitoring hosts legacy reg id
                guid:
                    type: string
                    description: Monitoring hosts unique guid which was used for 1.0 registration
                endpointId:
                    type: string
                    description: Endpoint id
                    x-cw-id-mapping:
                        entityType: endpoint
                        context: private
                status:
                    type: string
                    description: Monitoring hosts status as hosts are registred successfully or not
                    enum:
                        - SUCCESS
                        - FAIL
                        - IN-PROGRESS
        errorresponse:
            description: Bad Request
            type: object
            properties:
                code:
                    type: string
                message:
                    type: string
            required:
                - code
                - message
        IncidentDataResponse201SomeFailed:
            type: object
            properties:
                errors:
                    type: array
                    items:
                        type: string
                success:
                    type: array
                    items:
                        type: string
        IncidentDataResponse201AllSuccess:
            type: object
            properties:
                success:
                    type: array
                    items:
                        type: string
    parameters:
        companyID:
            name: companyID
            description:
                It is the company id at CW end. Vendors can fetch this via the
                existing topology mapping APIs.
            in: path
            required: true
            schema:
                type: string
        siteID:
            name: siteID
            description:
                It is the site id at CW end. Vendors can fetch this via the
                existing topology mapping APIs.
            in: path
            required: true
            schema:
                type: string
        CompanyID:
            name: companyId
            in: path
            description: Unique identifier for the company
            required: true
            schema:
                type: string
        SiteID:
            name: siteId
            in: path
            description: Unique identifier for the site
            required: true
            schema:
                type: string
        EndpointID:
            name: endpointID
            in: path
            description: Unique identifier for the endpoint
            required: true
            schema:
                type: string
        EntityTypeQuery:
            name: entityType
            in: query
            description: >
                Entity type for which the attribute definitions are to be
                retrieved.   Possible values: "device", "company", "site".
            required: false
            schema:
                type: string
        OriginType:
            name: originType
            in: query
            description: >
                Origin type for the attribute definitions. Possible values: "partner",
                "vendor".
            required: false
            schema:
                type: string
        DefinitionID:
            name: definitionID
            in: path
            description: Unique identifier for the definition
            required: true
            schema:
                type: string
        AttributeIDs:
            name: attributeIDs
            in: query
            description: Comma-separated list of attribute IDs
            required: false
            schema:
                type: string
        WithDefaults:
            name: withDefaults
            in: query
            description: Include default values if true
            required: false
            schema:
                type: boolean
        OwnerID:
            name: ownerID
            in: query
            description: Unique identifier for the owner
            required: false
            schema:
                type: string
        partnerIdparam:
            name: partnerID
            in: path
            description: This will contain Partner ID
            required: true
            x-cw-openapi-partnerid: true
            x-cw-id-mapping:
                entityType: partner
                context: platform
            schema:
                type: string
        endpointIdparam:
            name: endpointID
            in: path
            description: This will contain Endpoint ID
            required: true
            x-cw-id-mapping:
                entityType: endpoint
                context: private
            schema:
                type: string
                format: uuid
        taskIdparam:
            name: taskId
            in: path
            description: TaskId - Time UUID
            required: true
            schema:
                type: string
                format: uuid
        instanceIdparam:
            name: instanceId
            in: path
            description: InstanceId - Time UUID
            required: true
            schema:
                type: string
                format: uuid
        From:
            name: From
            in: query
            required: false
            example: 2020-10-04T00:25:42.168Z
            schema:
                type: string
                format: datetime
        To:
            name: To
            in: query
            required: false
            example: 2020-10-05T00:25:42.168Z
            schema:
                type: string
                format: datetime
        clientIdparam:
            name: clientID
            in: path
            description: Company ID
            required: true
            schema:
                type: string
                format: int
        siteIdparam:
            name: siteID
            in: path
            description: Site ID
            required: true
            schema:
                type: string
                format: int
        hostID:
            name: hostID
            in: path
            description: hostID
            required: true
            x-cw-id-mapping:
                entityType: endpoint
                context: private
            schema:
                type: string
        userType:
            name: userType
            in: header
            description: user type
            x-cw-openapi-static-value: /itsupport247datastore
            schema:
                type: string
    requestBodies:
        PartnerAttributeDefinitionPOST:
            description: Schema for creating a new partner attribute definition
            required: true
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/PartnerAttributeDefinition"
        PartnerAttributeDefinitionPUT:
            description: Schema for updating a partner attribute definition
            required: true
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/PartnerAttributeDefinition"
        PartnerAttributeValuesPUT:
            description: Schema for updating partner attribute values
            required: true
            content:
                application/json:
                    schema:
                        type: array
                        items:
                            $ref: "#/components/schemas/AttributeValue"
    securitySchemes:
        openapi_oauth:
            type: oauth2
            flows:
                clientCredentials:
                    tokenUrl: https://openapi.service.itsupport247.net/v1/token
                    scopes: null
        topology:
            type: oauth2
            flows:
                clientCredentials:
                    tokenUrl: https://openapi.service.itsupport247.net/v1/token
                    scopes:
                        topology: read topology
        asset:
            type: oauth2
            flows:
                clientCredentials:
                    tokenUrl: https://openapi.service.itsupport247.net/v1/token
                    scopes:
                        asset:all: read all assets of the endpoint
                        asset:baseboard: read baseboard assets of the endpoint
                        asset:bios: read bios assets of the endpoint
                        asset:drives: read drives assets of the endpoint
                        asset:networks: read networks assets of the endpoint
                        asset:os: read os assets of the endpoint
                        asset:system: read system assets of the endpoint
                        asset:software: read software assets of the endpoint
                        asset:users: read users assets of the endpoint
                        asset:services: read services assets of the endpoint
                        asset:shares: read shares assets of the endpoint
        extended_attributes:
            type: oauth2
            flows:
                clientCredentials:
                    tokenUrl: https://openapi.service.itsupport247.net/v1/token
                    scopes:
                        extended_attributes: extended attributes management
        alerts:
            type: oauth2
            flows:
                clientCredentials:
                    tokenUrl: https://openapi.service.itsupport247.net/v1/token
                    scopes:
                        alerts: alerts management
        site_mapping:
            type: oauth2
            flows:
                clientCredentials:
                    tokenUrl: https://openapi.service.itsupport247.net/v1/token
                    scopes:
                        site_mapping: read site mappings
        endpoint_mapping:
            type: oauth2
            flows:
                clientCredentials:
                    tokenUrl: https://openapi.service.itsupport247.net/v1/token
                    scopes:
                        endpoint_mapping: endpoint mapping management
        network_and_monitoring:
            type: oauth2
            flows:
                clientCredentials:
                    tokenUrl: https://openapi.service.itsupport247.net/v1/token
                    scopes:
                        network_and_monitoring: network monitoring management
        platform:
            type: oauth2
            flows:
                clientCredentials:
                    tokenUrl: https://openapi.service.itsupport247.net/v1/token
                    scopes:
                        platform.companies.read: read all companies
                        platform.sites.read: read all sites
                        platform.sites.write: write all sites
        backupdashboard:
            type: oauth2
            flows:
                clientCredentials:
                    tokenUrl: https://openapi.service.itsupport247.net/v1/token
                    scopes:
                        backupdashboard:create: create backupdashboard
        endpoints_list:
            type: oauth2
            flows:
                clientCredentials:
                    tokenUrl: https://openapi.service.itsupport247.net/v1/token
                    scopes:
                        platform.asset.read: read all devices
        custom_fields:
            type: oauth2
            flows:
                clientCredentials:
                    tokenUrl: https://openapi.service.itsupport247.net/v1/token
                    scopes:
                        platform.custom_fields_definitions.read: View Custom Fields Definitions
                        platform.custom_fields_definitions.write: Update Custom Fields Definitions
                        platform.custom_fields_values.read: View Custom Fields Values
                        platform.custom_fields_values.write: Update Custom Fields Values
        automation_read:
            type: oauth2
            flows:
                clientCredentials:
                    tokenUrl: https://openapi.service.itsupport247.net/v1/token
                    scopes:
                        platform.automation.read: read all automations
        automation_create:
            type: oauth2
            flows:
                clientCredentials:
                    tokenUrl: https://openapi.service.itsupport247.net/v1/token
                    scopes:
                        platform.automation.create: create automations
        devices_read:
            type: oauth2
            flows:
                clientCredentials:
                    tokenUrl: https://openapi.service.itsupport247.net/v1/token
                    scopes:
                        platform.devices.read: read all systemstates
        product_usage_upload:
            type: oauth2
            flows:
                clientCredentials:
                    tokenUrl: https://openapi.service.itsupport247.net/v1/token
                    scopes:
                        platform.client_billing.write: vendor product usage upload
        device_groups:
            type: oauth2
            flows:
                clientCredentials:
                    tokenUrl: https://openapi.service.itsupport247.net/v1/token
                    scopes:
                        platform.deviceGroups.read: read all automations
        dataMapping_read:
            type: oauth2
            flows:
                clientCredentials:
                    tokenUrl: https://openapi.service.itsupport247.net/v1/token
                    scopes:
                        platform.dataMapping.read: read all data mappings
        policy_read:
            type: oauth2
            flows:
                clientCredentials:
                    tokenUrl: https://openapi.service.itsupport247.net/v1/token
                    scopes:
                        platform.policies.read: read all systemstates
servers:
    - url: https://openapi.service.itsupport247.net
    - url: https://openapi.service.euplatform.connectwise.com
    - url: https://openapi.qa.service.itsupport247.net
    - url: https://openapi.service.auplatform.connectwise.com
tags:
    - name: Authorization
    - name: Billing
    - name: Rate Limits
    - name: Alerting
    - name: Endpoint Mapping
    - name: Devices
    - name: Tickets
